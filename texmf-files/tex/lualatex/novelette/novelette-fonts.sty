%% This is file `novelette-fonts.sty', part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-fonts.sty}%
[2023/10/26 v0.21 LaTeX file (font settings and defaults).]
%%


%% This file is loaded AtEndPreamble, when processing interior (not cover).
%% Choice of styleafont, stylebfont, and stylecfont, in novelette-settings.sty.


%% Hat tip to Marcel Kr√ºger, tex.stackexchange.com q. 684762:
\directlua{
  fonts.handlers.otf.addfeature {
    name = 'nvt_liga',
    type = 'ligature',
    data = {
      [0x2014] = {0x2014, 0x002D},
    },
  }
}
%%


%%
\defaultfontfeatures{} % Reset.
\defaultfontfeatures{RawFeature={tlig,nvt_liga,kern}} % All fonts.
%%


%% Swainson character variants for increased bearings in french.
% In locations where you do not use Swainson, you must manually type the space.
\def\fr@feat{}
\ifthenelse{\equal{\set@lang}{french}}{
  % Option [fr] and default without option: Thin space before :;!? and
  % closing single/double guillemets, emdash, uni2015.
  % Also after opening single/double guillemets. 
  \ifthenelse{\equal{\lang@option}{fr}\OR\equal{\lang@option}{}}{
    \gdef\fr@feat{RawFeature={+cv20,+cv21}} % Thin space punct and colon.
  }{}
  % Option [ch] is like [fr], but with full space before colon.
  \ifthenelse{\equal{\lang@option}{ch}}{
    \gdef\fr@feat{RawFeature={+cv20,+cv22}}
  }{}
  % Option [ca] only provides thin space before colon.
  \ifthenelse{\equal{\lang@option}{ca}}{
   \gdef\fr@feat{RawFeature={+cv21}}
  }{}
  % Option [x] provides no extra spacing.
}{}
%%


%% PROCESS FONTS
\newlength\X@ht % X-height of Swainson.
\newlength\x@ht % x-height of Swainson.
\newlength\chars@ht % Max height of Swainson Latin-1 characters.
\newlength\chars@dp % Max depth of Swainson Latin-1 characters (positive).
\newlength\@slop % Leftover height at main text bottom, due to estimations.
\newcounter{fallback@count} % Incremented if \fallback{char} without font.
\def\swainson@feat{%
  ItalicFont=Swainson-Italic.otf, BoldFont=Swainson-Regular.otf, %
  BoldItalicFont=Swainson-Italic.otf, \fr@feat%
}
\def\process@fonts{
  % main font:
  \setmainfont{Swainson-Regular.otf}% Body text.
    [\swainson@feat, Numbers=OldStyle]
  \let\mainfont\rmfamily\relax
  % sans font, used for footnotes. Not actually sans-serif:
  \setsansfont{Swainson-Regular.otf}
    [\swainson@feat, Numbers=OldStyle, FakeStretch=1.08, LetterSpace=.4, %
     WordSpace=1.04]
  \let\footnote@font\sffamily\relax
  \long\gdef\alt@footnote@size{%
     \@setfontsize\alt@footnote@size{.88\type@size}{.88\le@ding}%
  }
  \let\sffamily\relax % Ignore \sffamily elsewhere.
  % mono font, used for header/footer. Not actually monospace:
  \edef\temp@n{\fpeval{1.7 - .7\hf@scale}}
  \edef\temp@d{\fpeval{round(\temp@n,2)}}
  \ifthenelse{\fpeval{\temp@d=1}=1}{
    \xdef\hf@stretch{FakeStretch=\temp@d}
  }{\def\hf@stretch{}}
  \setmonofont{Swainson-Regular.otf}% Header, footer. Not actually monospace.
    [\swainson@feat, \pn@feat, \hf@scale, \hf@stretch, %
     LetterSpace=4, WordSpace=1.4]
  \let\head@font\ttfamily\relax
  \let\ttfamily\relax % Ignore \ttfamily elsewhere.
  % name font:
  \newfontfamily\name@font{Swainson-Regular.otf}%
    [\swainson@feat, Scale=\nn@scale, FakeStretch=.9, LetterSpace=4] %%%%%
  % subname font:
  \newfontfamily\subname@font{Swainson-Regular.otf}%
    [\swainson@feat, Scale=\sn@scale, FakeStretch=.9, LetterSpace=4] %%%%%
  % stylea font:
  \ifdefined\stylea@name
\typeout{DDDDDDDDDDDDD}
    \newfontfamily\stylea@font{\stylea@name}[\stylea@feat]
  \else
    \let\stylea@font\relax
  \fi
  % styleb font:
  \ifdefined\styleb@name
    \newfontfamily\styleb@font{\styleb@name}[\styleb@feat]
  \else
    \let\styleb@font\relax
  \fi
  % stylec font:
  \ifdefined\stylec@name
    \newfontfamily\stylec@font{\stylec@name}[\stylec@feat]
  \else
    \let\stylec@font\relax
  \fi
  % fallback font:
  \gundef\fallback
  \iffallback@enabled
    \IfFontExistsTF{Libertinus Serif}{
       \newfontfamily\fallback@font{Libertinus Serif}%
         [Numbers=OldStyle, Scale=MatchLowercase, LetterSpace=.2]
       \gdef\fallback##1{{\fallback@font##1}}
    }{
      \@error{Font `Libertinus Serif' not installed.^^J%
        You requested \string\fallback{enabled} in Preamble.^^J%
        But the fallback font, Libertinus Serif, is unavailable.^^J%
        Install `libertinus-fonts' then re-compile your document.^^J%
        Until then, missing character symbol may appear, instead of fallback.}
      \gdef\fallback##1{{##1}}
    }
  \else
    \gdef\fallback##1{%
      {##1}\typeout{ALERT: Used \string\fallback without font, page \thepage.}%
    }
    \stepcounter{fallback@count}% %%%%% and add to log summary.
  \fi
  \let\textfallback\fallback\relax % Mentioned elsewhere, online.
  % Swainson Metrics:
  \global\deflength\X@ht{.65\type@size}
  \global\deflength\x@ht{.4\type@size}
  \global\deflength\chars@ht{.84\type@size}
  \global\deflength\chars@dp{.23\type@size}
  \edef\chars@line{\fpeval{trunc(\textwidth / (.41*\type@size),0)}}
  \setlength\temp@l{\m@top+.5\pageheight-.5\trim@h-1in}
  \global\deflength\topmargin{\temp@l+\chars@ht-\le@ding}
  \setlength\temp@l{\printable@ht}
  \ifhe@der\addtolength\temp@l{-\headheight-\headsep}\fi %%%%%
  \iff@@ter\addtolength\temp@l{-\le@ding-\footskip}\fi %%%%%
  \global\deflength\@slop{\temp@l-\lines@pp\le@ding+\le@ding-\chars@ht}
}
%%


%% FEATURE COMMANDS
\def\sups#1{{\addfontfeature{Numbers=ResetAll,VerticalPosition=Superior}#1}}
\let\sup\sups\relax
%%
\def\subs#1{{\addfontfeature{Numbers=ResetAll,VerticalPosition=Inferior}#1}}
\let\sub\subs\relax
%%
\long\def\smcp#1{{\addfontfeature{Letters=SmallCaps}#1}}
\long\def\allsmcp#1{% uppercase+lowercase to small caps
  {\addfontfeature{Letters=UppercaseSmallCaps,Letters=SmallCaps}#1}%
}
\let\textsc\smcp\relax % unified
\let\oldscshape\scshape\relax % unified
\let\scshape\smcp\relax % unified
%%
\long\def\lnum#1{{\addfontfeature{Numbers=ResetAll,Numbers=Lining}#1}}
\long\def\onum#1{{\addfontfeature{Numbers=ResetAll,Numbers=Lowercase}#1}}
%% Fake medium caps:
\DeclareDocumentCommand\medcap{m}{%
  \smash{{\addfontfeature{Letters=UppercaseSmallCaps,%
    ScaleAgain=1.22,FakeStretch=.88}#1}}%
}
\let\medcaps\medcap\relax
%%



%%
\endinput
%%
%% End of file `novelette-fonts.sty'
