%% This is file `novelette-fonts.sty', part of `novelette' document class.
%% Copyright 2024 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-fonts.sty}%
[2024/02/06 v0.38 LaTeX file (font settings and defaults).]
%%

%% This file is loaded AtEndPreamble, when processing interior (not cover).

%% Math? Bah! Swainson has ssty with math script. Not enough for actual math.
\ifdefined\setmathrm\setmathrm{Swainson}\fi
%%


%% Per Alan Munn, response to tex.stackexchange.com q.707225, CC-BY-SA-4.0:
\def\which@font{}
\ExplSyntaxOn
\NewDocumentCommand\nvt@missing@font{}{
  \ifthenelse{\equal{\which@font}{alt}}{
    \msg_set:nnnn {fontspec} {font-not-found}
    {\\Novelette~intercepted~the~fontspec~message.\\
     This~message~is~from~class~novelette:\\
     The~\string\alt{}~font~'Libertinus~Serif'~was~not~found.\\
     Are~you~sure~it~is~available~to~TeX?}
    {With~\string\altfont{true}~you~need~Libertinus~Serif~fonts.\\
     Use~the~TeX~package~manager~to~install~'libertinus-fonts'.\\
     If~you~cannot~install~packages,~you~may~download~the~package~*.zip\\
     from~ctan.org,~unzip it,~and~copy~the~two~font~files\\
     'LibertinusSerif-Regular.otf'~and~'LibertinusSerif-Italic.otf'\\
     to~the~same~directory~as~your~main~*.tex document.\\
     Or,~remove~\string\altfont{true}~from~Preamble.~But~then~you~cannot\\
     use~the~\string\alt{}~command~in~document~body.\\
     RESPOND~x~TO~EXIT~NOW.~ Then~fix~the~problem.}
  }{}
}
\ExplSyntaxOff
%% End code per Alan Munn.


%% Per Marcel Krüger, tex.stackexchange.com q. 684762, CC-BY-SA-4.0:
\directlua{
  fonts.handlers.otf.addfeature {
    name = 'nvt_liga',
    type = 'ligature',
    data = {
      [0x2014] = {0x2014, 0x002D},
    },
  }
}
% This next was never designed, but left here for possible future reference:
\directlua{
  fonts.handlers.otf.addfeature {
    name = 'nvt_shortf',
    type = 'substitution',
    data = {
      ["f"] = "f.short",
    },
  }
}
%% End code per Marcel Krüger.


%% Swainson character `f' does not need ligatures.
\default@font@features{} % Reset.
\default@font@features{Renderer=Node,RawFeature={tlig,nvt_liga,kern}} % All. 
%%


%% Swainson character variants for increased bearings in french.
% In locations where you do not use Swainson, you must manually type the space.
\def\fr@feat{}
\ifthenelse{\equal{\set@lang}{french}}{
  % Option [fr] and default without option: Thin space before :;!? and
  % closing single/double guillemets, emdash, uni2015.
  % Also after opening single/double guillemets. 
  \ifthenelse{\equal{\lang@option}{fr}\OR\equal{\lang@option}{}}{
    \gdef\fr@feat{RawFeature={+cv20,+cv21}} % Thin space punct and colon.
  }{}
  % Option [ch] is like [fr], but with full space before colon.
  \ifthenelse{\equal{\lang@option}{ch}}{
    \gdef\fr@feat{RawFeature={+cv20,+cv22}}
  }{}
  % Option [ca] only provides thin space before colon.
  \ifthenelse{\equal{\lang@option}{ca}}{
   \gdef\fr@feat{RawFeature={+cv21}}
  }{}
  % Option [x] provides no extra spacing.
}{}
%%


%% PROCESS FONTS
\newlength\X@ht % X-height of Swainson.
\newlength\x@ht % x-height of Swainson.
\newlength\chars@ht % Max height of Swainson Latin-1 characters.
\newlength\chars@dp % Max depth of Swainson Latin-1 characters (positive).
\newcounter{alt@count} % Incremented if \alt{char} without libertinus.
\def\process@fonts{
  % main font, used for body text:
  \setmainfont{Swainson}[\fr@feat, Numbers=OldStyle]
  \let\mainfont\rmfamily\relax
  \let\main\relax
  % sans font, same as main font. Not actually used:
  \setsansfont{Swainson}[\fr@feat, Numbers=OldStyle]
  \let\sffamily\relax % Ignore \sffamily elsewhere.
  \let\bold@weight\bfseries\relax % Possible within fullpage.
  \let\bfseries\relax % No bold outside of fullpage environment.
  % Provide fallback characters, if available:
  \if@libertinus
    \gdef\which@font{alt}
    \nvt@missing@font
    \setmonofont{Libertinus Serif}[Numbers=OldStyle,RawFeature={+nvt_fshort}]
    \let\alt@font\ttfamily\relax
    \gdef\alt##1{% This calculation is specific to Libertinus Serif.
      \StrSubstitute{##1}{‖}{|\kern-.1em|}[\temp@s]% Double bar is too tall.
      \sbox0{\alt@font\temp@s}%
      \@okfalse% lowercase when false, uppercase when true.
      \comp@re{\ht0>.644em}{%
        \comp@re{\ht0<.661em}{\@oktrue}{}%
      }{}%
      \comp@re{\ht0>.799em}{\@oktrue}{}%
      \if@ok%
        {\alt@font\temp@s}%
      \else%
        {\alt@font\addfontfeature{ScaleAgain=.93,FakeStretch=1.02}\temp@s}%
      \fi%
      \obeyspaces%
    }
  \else
    \setmonofont{Swainson}[\fr@feat, Numbers=OldStyle] % Same as main font.
    \gdef\alt##1{%
      \comp@re{\value{alt@count}=0}{}{%
        \nvt@err{Font `Libertinus Serif' not installed for \string\alt{char}}
          {You requested \string\alt, which requires fonts^^J%
           installed by package `libertinus-fonts'. They were not found.^^J%
           Use the TeX package manager to install `libertinus-fonts'.^^J%
           Until then, missing character symbols may appear.}%
        \@lert{\string\alt{text} needs Libertinus Serif font.}%
      }%
      {##1}\obeyspaces%
      \stepcounter{alt@count}%
    }
  \fi
  \let\ttfamily\relax % Ignore \ttfamily elsewhere.
  \newfontface\f@light{Towhee-Light.otf}[\fr@feat, Numbers=ResetAll]
  \newfontface\f@book{Towhee-Book.otf}[\fr@feat, Numbers=ResetAll,%
    ScaleAgain=.87, LetterSpace=2]
  \newfontface\f@med{Towhee-Medium.otf}[\fr@feat, Numbers=ResetAll]
  \newfontface\f@dark{Towhee-Dark.otf}[\fr@feat, Numbers=ResetAll]
  \let\head@font\relax
  \ifthenelse{\equal{\hf@font}{light}}{\let\head@font\f@light}{}
  \ifthenelse{\equal{\hf@font}{book}}{\let\head@font\f@book}{}
  \ifthenelse{\equal{\hf@font}{med}}{\let\head@font\f@med}{}
  \ifthenelse{\equal{\hf@font}{dark}}{\let\head@font\f@dark}{}
  % Swainson Metrics:
  \global\deflength\X@ht{.65\type@size}
  \global\deflength\x@ht{.4\type@size}
  \global\deflength\chars@ht{.84\type@size}
  \global\deflength\chars@dp{.26\type@size} % It is actually less.
  \edef\chars@line{\fpeval{trunc(\textwidth / (.41*\type@size),0)}}
  \setlength\temp@l{\m@top+.5\pageheight-.5\trim@h-1in}
  \global\deflength\topmargin{\temp@l+\chars@ht-\@leading}
  \set@protrusions % Lower on this page.
}
%%


%% FEATURE COMMANDS
\def\sups#1{\strut%
  {\add@font@feature{Numbers=ResetAll,VerticalPosition=Superior}#1}%
}
\let\sup\sups\relax
%%
\def\subs#1{\strut%
  {\add@font@feature{Numbers=ResetAll,VerticalPosition=Inferior}#1}%
}
\let\sub\subs\relax
%%
\long\def\smcp#1{%
  \begingroup%
  \add@font@feature{Letters=SmallCaps,LetterSpace=2}#1%
  \endgroup%
}
\long\def\allsmcp#1{% uppercase+lowercase to small caps
  {\add@font@feature{Letters=UppercaseSmallCaps,Letters=SmallCaps,%
    LetterSpace=2}#1}%
}
\let\textsc\smcp\relax % unified
\let\oldscshape\scshape\relax % unified
\let\scshape\smcp\relax % unified
%%
\long\def\lnum#1{\strut{\add@font@feature{Numbers=ResetAll,Numbers=Lining}#1}}
\long\def\onum#1{%
  \strut{\add@font@feature{Numbers=ResetAll,Numbers=Lowercase}#1}%
}
%% Fake medium caps:
\DeclareDocumentCommand\medcap{m}{%
  \strut\smash{{\add@font@feature{Letters=UppercaseSmallCaps,%
    ScaleAgain=1.22,FakeStretch=.88}#1}\strut}%
}
\let\medcaps\medcap\relax
%%

%% Font expansion and protrusion (does not need microtype).
%  Values 20 20 1 use font expansion (sretch/shrink) +/- 2%, steps 0.1%.
%    The \lpcode and \rpcode values are in font units, 1000/em.
%  Positive codes are set to absorb the left/right bearing of that character.
%  Negative codes are set to push back left\right overhang of that character.
%    The values are specific to Swainson fonts, and are not needed for those
%  places where \alt font (Libertinus Serif) may be used as fallback.
%    Although \directlua may be used for investigating characters defined
%  for OpenType features (such as small caps), Novelette uses a different
%  method: No protrusion is specified for those glyphs. They are designed with
%  protusion built-into the fonts, byt adjusted side bearings. Where necessary,
%  the fonts use kerning to compensate for unusual side bearings.
\def\set@prot#1#2#3{\lpcode\font#1=#2 \rpcode\font#1=#3}
\def\swup@protrusion{ % Regular
  \expandglyphsinfont\the\font 20 20 1
  \set@prot{`\-}{56}{56} \set@prot{"00AD}{56}{56} % hyphen-minus, soft hyphen
  \set@prot{`\,}{17}{40} \set@prot{`\.}{40}{40}
  \set@prot{`\:}{40}{40} \set@prot{`\;}{17}{40}
  \set@prot{`\‘}{40}{40} \set@prot{`\’}{40}{40}
  \set@prot{`\“}{56}{56} \set@prot{`\”}{56}{56}
  \set@prot{`\«}{22}{37} \set@prot{`\»}{37}{22}
  \set@prot{`\‹}{22}{37} \set@prot{`\›}{37}{22}
  \set@prot{`\f}{0}{-6} \set@prot{"FB00}{0}{-6} % f, ff
  \set@prot{`\j}{-45}{0} \set@prot{"0237}{-45}{0} % j, dotlessj
  \set@prot{`\J}{-62}{0}
  \set@prot{`\T}{12}{0}
  \set@prot{"0192}{-48}{0} % florin
  \set@prot{"2010}{56}{56} \set@prot{"2011}{57}{56} % hyphen, nbrhyphen
  \set@prot{"2012}{30}{30} \set@prot{"2013}{30}{30} % figure dash, en dash
  \set@prot{"2014}{30}{30} \set@prot{"2015}{30}{30} % em dash, horiz bar
  \set@prot{"2E3A}{30}{30} \set@prot{"2E3B}{30}{30} % 2-em dash, 3-em dash
  \set@prot{"201A}{40}{40} \set@prot{"201E}{40}{40} % quotebase, quotedblbase
  \set@prot{"2026}{40}{40} % ellipsis
  \set@prot{"0060}{90}{177} \set@prot{"00B4}{147}{120} % grave, acute
  \set@prot{"0022}{38}{38} \set@prot{"0027}{38}{38} % quotesingle, quotedbl
\set@prot{`\j}{500}{0}
}
\def\swit@protrusion{ % Italics
  \expandglyphsinfont\the\font 20 20 1
  \set@prot{`\-}{56}{56} \set@prot{"00AD}{56}{56} % hyphen-minus, soft hyphen
  \set@prot{`\,}{17}{40} \set@prot{`\.}{40}{40}
  \set@prot{`\:}{40}{40} \set@prot{`\;}{17}{40}
  \set@prot{`\‘}{40}{40} \set@prot{`\’}{40}{40}
  \set@prot{`\“}{56}{56} \set@prot{`\”}{56}{56}
  \set@prot{`\«}{22}{37} \set@prot{`\»}{37}{22}
  \set@prot{`\‹}{22}{37} \set@prot{`\›}{37}{22}
  \set@prot{`\f}{0}{-6} \set@prot{"FB00}{0}{-6} % f, ff
  \set@prot{`\j}{-45}{0} \set@prot{"0237}{-45}{0} % j, dotlessj
  \set@prot{`\J}{-62}{0}
  \set@prot{`\T}{12}{0}
  \set@prot{"0192}{-48}{0} % florin
  \set@prot{"2010}{56}{56} \set@prot{"2011}{57}{56} % hyphen, nbrhyphen
  \set@prot{"2012}{30}{30} \set@prot{"2013}{30}{30} % figure dash, en dash
  \set@prot{"2014}{30}{30} \set@prot{"2015}{30}{30} % em dash, horiz bar
  \set@prot{"2E3A}{30}{30} \set@prot{"2E3B}{30}{30} % 2-em dash, 3-em dash
  \set@prot{"201A}{40}{40} \set@prot{"201E}{40}{40} % quotebase, quotedblbase
  \set@prot{"2026}{40}{40} % ellipsis
  \set@prot{"0060}{90}{177} \set@prot{"00B4}{147}{120} % grave, acute
  \set@prot{"0022}{38}{38} \set@prot{"0027}{38}{38} % quotesingle, quotedbl
}
%%
\def\set@protrusions{
\swup@protrusion
  \begingroup\rmfamily\swup@protrusion\endgroup
  \begingroup\rmfamily\itshape\swit@protrusion\endgroup
  \adjustspacing=2 % Necessary.
  \protrudechars=2 % Necessary.
}
%%


%%
\endinput
%%
%% End of file `novelette-fonts.sty'
