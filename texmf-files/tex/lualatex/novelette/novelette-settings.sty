%% This is file `novelette-settings.sty', part of `novelette' document class.
%% Copyright 2024 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-settings.sty}%
[2024/01/18 v0.35 LaTeX file (Preamble settings).]
%%

%% This file is loaded for interior only.

%% SETTINGS
%    All settings are in this file, except \title, \author, in novelette.cls.
%  Novelette restricts your settings, so that you can rapidly get to writing
%  your book, instead of fooling around with settings.
%%

%% Mode (how the PDF is prepared).
%  Typesetting (paragraphs, pagination) is the same in all modes.
%  All modes, except final, label PDF metadata as not being final.
%  When your writing and editing is done, set \mode{final}.
%    draft -> Does not inspect images, shows overfull boxes.
%    shade -> Is draft, with margins and guides tinted gray.
%    typo -> Is draft, with typographic flaws inspected and highlighted.
%    typo* -> Is typo, with non-highlighted text changed to light gray.
%    final -> Inspects images, provides PDF/X unless requested otherwise.   
%    dev -> Is draft, with developer enhancements. Not for ordinary users.
%%
\def\mode@tail{(default)}
\newcommand\mode[1]{
  \StrDel{#1}{ }[\temp@s]
  \@okfalse
  \IfSubStr{:draft:shade:typo:typo*:final:dev:}{:\temp@s:}{
    \@oktrue\xdef\@mode{\temp@s} \gdef\mode@tail{}
  }{}
  \if@ok\else
    \nvt@err{Bad setting for \string\mode{setting}}%
      {Choose one mode: draft shade typo typo* final.^^J%
       Sets book interior mode. Default draft. Ignored by cover.^^J%
       Both typo and typo* are typo mode, but with different highlights.^^J%
       If any error (such as this one) is generated during compile,^^J%
       then final mode will be automatically switched to draft.}%
  \fi
}
%%

%% Trim Size (finished interior page size).
%  This setting is mandatory.
%    Trim size is the finished size of interior pages. It is the same as the
%  book size. This is your decision, so Novelette does not provide a default.
%    Unlike standard LaTeX document classes, Novelette does not select
%  trim size from a list of papers (such as letterpaper, a4paper, etc.)
%  Instad, you provide the actual width and height, with units in|mm.
%    During manufacture, larger paper is fed through the printer. At the very
%  end, after rough-cut pages are bound into the rough-cut cover, the entire
%  book is "trimmed" to final size by a cutting machine. This is why books
%  manufactured using Perfect Print technology (typical of print-on-demand)
%  are so precisely aligned.
%%
\newlength\trim@w \newlength\trim@h % No defaults. Must be set.
\newcommand\trimsize[1]{ % w=length,h=length. Must be h>=w.
  \xdef\trim@size{#1}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\trim@w{\temp@n}
    \StrBehind{\temp@s}{h=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\trim@h{\temp@n}
    \fi
  \fi
  \if@ok
    \ifthenelse{\dimtest{\trim@h}{<}{\trim@w}}{\@okfalse}{}
  \fi
  \if@ok\else
    \fatal@err{Bad or missing \string\trimsize{w=W,h=H}.^^J%
     W and H must have units in|mm. Also, H>=W.^^J%
     You must set both of them. No default values.}%
  \fi
}
%%

%% Intent (PDF/X Output Intent)
%    Many print-on-demand services prefer (or require) PDF/X files. This is
%  a subset of PDF, requiring certain things, and prohibiting other things.
%  Novelette has built-in capability to produce PDF/X, and will do it, unless
%  you set \intent{none}.
%    Output Intent is declared in PDF metadata. It tells the printer that
%  the graphics designer prepared the PDF in a color-managed workflow, for the
%  color rendition of a specific printing technology. Then, if that is the
%  actual technology used, the printed result will match the designer's intent. 
%  But it does not force the printer to use that technology.
%    Output Intent is important for magazines, and other publications that
%  require accurate color. But your book interior does not use color, and the
%  print service will not be committed to any particular color rendition for
%  your book cover.
%    Although Output Intent is irrelevant for your purposes,
%  it must be declared in PDF/X, as part of the standard. It will be ignored.
%    In modes other than final, Novelette does not produce PDF/X, and does not
%  declare an Output Intent. In final mode, Novelette produces PDF/X unless
%  you set \intent{none}.
%    The default intent is SWOP, shorthand for "U.S. Web Coated (SWOP) v2",
%  also known as "CGATS TR 001". This widely-used in the USA.
%    Other choices are FOGRA (shorthand for "FOGRA39L"), typical for Europe,
%  and JC (shorthand for "JC200103"), typical for Japan.
%%
\def\@intent{SWOP} \def\intent@tail{(default)}
\newcommand\intent[1]{
  \StrSubstitute{#1}{FOGRA39L}{FOGRA39}[\temp@s]
  \IfSubStr{:none:SWOP:FOGRA39:JC200103:}{:\temp@s:}{
    \xdef\@intent{\temp@s} \gdef\intent@tail{}
  }{
    \nvt@err{Bad setting for \string\intent{setting}}%
      {Choose one setting: none SWOP FOGRA39 JC200103.^^J%
       Docs explain what the choices mean. Default SWOP.^^J%
       If choice none, PDF will not declare PDF/X conformance.^J%
       Others declare PDF/X conformance with chosen Output Intent,
       but only in final mode.}%
  }
}
%%

%% Sheetfeed (when PDF page size differs from trimsize)
%    Important: Do not use this setting unless necessary. The default is same
%  as trimsize, which is almost always what you need.
%    PDF page size is what you see (unless cropped) in PDF reader software.
%  Trim size is the finished interior page size. Most print services require
%  them to be the same: what you see is what you get.
%    In a few cases, especially when working with a human editor, or printing
%  for yourself on a home printer, you may need to center the trim size
%  (horizontally and vertically) in a standard paper size. You may use
%  \sheetfeed{letter} or \sheetfeed{A4} for that purpose.
%    Whether or not you use \sheetfeed, the PDF metadata states the actual
%  trim size (and whether it is centered in a larger sheet).
%%
\def\sheet@feed{trimsize} \def\sheetfeed@tail{(default)}
\newcommand\sheetfeed[1]{
  \StrDel{#1}{ }[\temp@s]
  \IfSubStr{:trimsize:letter:a4:A4:}{:\temp@s:}{
    \xdef\sheet@feed{#1}\@oktrue
  }{\@okfalse}
  \StrDel{\temp@s}{\sheet@feed}[\temp@s]
  \ifthenelse{\equal{\temp@s}{}}{
    \ifthenelse{\equal{\sheet@feed}{trimsize}}{}{\gdef\sheetfeed@tail{}}
  }{
    \nvt@err{Bad setting \string\sheetfeed{setting}}%
      {Choose only one sheetfeed: trimsize letter A4.^^J%
       Default trimsize. If unsure, do not set sheetfeed (accept default).}%
    \gdef\sheet@feed{trimsize}
    \gdef\sheetfeed@tail{(re-set to default, due to bad setting)}
  }
}
%%

%% Margins (excludes all printable material)
%    In Novelette, the four margins surround a rectangle, which is the entire
%  printable area. If you use header|footer, they appear within this rectangle,
%  not within a margin. There are no marginal notes.
%    Word processors (and some other LaTeX document classes) place material
%  in the margin areas. You cannot do that. So if you are required to have
%  margins of a certain size, be sure that your "margins" mean the same thing
%  as the required "margins".
%    There are four margins: top, outside, bottom, inside. The inside margin
%  includes a small area needed for binding glue. So if your page design
%  visually centers the text block at left and right, which is standard,
%  then the inside margin must be set slightly larger than the outside margin.
%    Many (not all) print-on-demand services require minimum margins of
%  0.5in (US) or 13mm (Europe), plus 0.125in (US) or 3mm (Europe) at inside.
%  The default margins meet the larger of these, all around.
%    Print-on-demand services generally reject artistic page layout, with
%  margin at outside or bottom. This is because the copies are printed in
%  various places by various machines, and handled by persons who know nothing
%  about your design intent. Artistic placement will be seen as mis-aligned.
%%
\newlength\m@top \newlength\m@out \newlength\m@bot \newlength\m@ins
\newif\ifmargin@lerted % True if following message already issued.
\def\margin@lert{
  \ifmargin@lerted\else
    \@lert{Unusual margin settings. Too small? No glue area?}
  \fi
  \global\margin@lertedtrue
}
\setlength\m@top{13mm} \setlength\m@out{13mm} % Defaults. 16.2mm>.625in,
\setlength\m@bot{13mm} \setlength\m@ins{16.2mm} % 13mm>.5in, diff>.125in>3mm.
\def\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm} \def\margin@tail{(defaults)}
\newcommand\margins[1]{
  \xdef\margin@setting{#1} \gdef\margin@tail{}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{t=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\m@top{\temp@n}
    \ifdimcomp{\m@top}{<}{.25in}{\margin@lert}{}%
    \StrDel{\temp@s}{t=\temp@n,}[\temp@s]
    \StrBehind{\temp@s}{o=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\m@out{\temp@n}
      \ifdimcomp{\m@out}{<}{.25in}{\margin@lert}{}%
      \StrDel{\temp@s}{o=\temp@n,}[\temp@s]
      \StrBehind{\temp@s}{b=}[\temp@n]
      \StrBefore{\temp@n}{,}[\temp@n]
      \check@length{\temp@n}
      \if@ok
        \global\deflength\m@bot{\temp@n}
        \ifdimcomp{\m@bot}{<}{.25in}{\margin@lert}{}%
        \StrDel{\temp@s}{b=\temp@n,}[\temp@s]
        \StrBehind{\temp@s}{i=}[\temp@n]
        \StrBefore{\temp@n}{,}[\temp@n]
        \check@length{\temp@n}
        \if@ok
          \global\deflength\m@ins{\temp@n}
          \ifdimcomp{\m@ins}{<}{.375in}{\margin@lert}{}%
          \StrDel{\temp@s}{i=\temp@n,}[\temp@s]
        \fi
      \fi
    \fi
  \fi
  \if@ok
    \setlength\temp@l{\m@out+3mm}
    \ifdimcomp{\m@ins}{<}{\temp@l}{\margin@lert}{}%
  \else
    \nvt@err{Bad setting for \string\margins{setting}}%
      {Format: \string\margins{t=T,o=O,b=B,i=I}^^J%
       t->top, o->outside, b->bottom, i->inside (spine, with glue zone).^^J%
       T,O,B,I have units in|mm. If you set any, You must set all four.^^J%
       Usually I is larger than O by at least 3mm or .125in.}%
    \setlength\m@top{13mm} \setlength\m@out{13mm} % Restore defaults.
    \setlength\m@bot{13mm} \setlength\m@ins{16.2mm}
    \gdef\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm}
    \gdef\margin@tail{(re-set to defaults)}
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNada{\temp@s}{}{
    \xdef\margin@cruft{\temp@s}
    \@lert{Ignored unknown `\margin@cruft' in \string\margins.}
  }
}
%%

%% Alt Font, Deco Font, Drama Font:
\newif\if@libertinus
\newcommand\altfont[1]{
  \StrDel{#1}{ }[\temp@s]
  \IfBeginWith{\temp@s}{t}{\global\@libertinustrue}{}
}
% Just one file, not a family. Use filename, with extension otf or ttf:
\newcommand\decofont[1]{\gdef\deco@font@file{#1}}
\newcommand\dramafont[1]{\gdef\drama@font@file{#1}}
%%

%% Layout (page design).
%    Novelette has its own methods for interior page design, because
%  popular fiction only needs a few possibilities.
%    There are 8 possible layout schemes, numbered 1-8 (see documentation).
%  Each determines whether there is a header and/or footer, and (if header)
%  its design. For developer use, scheme 0 omits both header and footer.
%    You may tweak the distance (gap) from header (if used) to main text,
%  and from main text to footer (if used).
%    Format: \layout{scheme=S,gap=G,lines=L,em=M,font=F}
%      S -> Integer 1-8, also 0 for dev. Default 2.
%      G -> Number 0.5-1. Default 1.
%      L -> Integer lines in main textblock. Default is calculated, typ 27-37.
%      M -> With units pt or bp. Default calculated, typ 11.4-11.7pt.
%      F -> main,light,dark,deco,drama. Selects header font. Default main.^^J%
%      Any order. May omit some or all, for defaults.
%%
\def\layout@setting{scheme=2,gap=1} % em is calculated.
\def\@scheme{2} \def\hf@gap{1} \def\hf@font{main} \def\layout@tail{}
\newlength\type@size % Main font size.
\DeclareDocumentCommand\layout{m}{
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{em=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \ifdimcomp{\temp@n}{<}{8bp}{
    \nvt@err{Requested \string\layout{em=\temp@n} is out of range}%
      {Main em size must be at least 8bp (8.03pt).^^J%
       Practical range is 10.5pt-13pt. Typical value is 11.4pt-11.7pt.^^J%
       If in doubt, let Novelette choose the value for you.}%
    }{
       \global\deflength\type@size{\temp@n}
    }
  \fi
  \IfNada{\temp@n}{\@oktrue}{}
  \StrDel{\temp@s}{em=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{gap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0.5}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\hf@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{gap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{font=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfSubStr{:main:light:dark:deco:drama:}{:\temp@n:}{%
      {\xdef\hf@font{\temp@n}}%
    }{\@okfalse}
  }
  \StrDel{\temp@s}{font=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{scheme=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>8}=1}{\@okfalse}%
        {\xdef\@scheme{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{scheme=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{lines=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<12}=1\OR\fpeval{\temp@n>50}=1}{\@okfalse}%
        {\xdef\lines@pp{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{lines=\temp@n,}[\temp@s]
  \if@ok\else
    \nvt@err{Bad setting \string\layout{setting}}%
      {Format: \layout{scheme=S,gap=G,lines=L,em=M,font=F}^^J%
       S -> Integer 1-8, also 0 for dev. Default 2.^^J%
       G -> Number 0.5-1. Default 1.^^J%
       L -> Integer lines in main text. Default is calculated, typ 27-37.^^J%
       M -> With units pt or bp. Default calculated, typ 11.4-11.7pt.^^J%
       F -> main,light,dark,deco,drama. Selects header font. Default main.^^J%
       Any order. May omit some or all, for defaults.}%
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNada{\temp@s}{}{
    \xdef\layout@cruft{\temp@s}
    \@lert{Ignored unknown `\layout@cruft' in \string\layout.}
  }
}
%%

%% Guides (for vertical positioning reference, in shade mode)
%    In \mode{shade}, the margins appear gray. If you set guides, they appear
%  as light gray bars, inside the darker left and right margins.
%    This may be useful when you wish to ensure that something appears at
%  a specific vertical position. For example, when you begin chapters with
%  the upperpage environment, it does not force the start of main text to
%  any particular line. You must do that by manually adding blank lines.
%  A guide pair can mark where the first of line of main text should be.
%    You may set up to 4 guides. Each is an integer number of lines, starting
%  at the top of the main text block (whether or not anything appears there).
%    Guides do not force anything. They are only visual references.
%  Format: \guides{A,B,C,D} where A,B,C,D are integer lines from top of main.
%%
\def\@guides{} \def\guides@tail{(no guides)}
\newcommand\guides[1]{
  \gdef\@guides{#1}\gdef\guides@tail{(only displayed in shade mode)}
}
%%

%% Fonts (you cannot set them; this is merely informative)
%    Novelette ships with Swainson font, designed for main text. It is vaguely
%  similar to Garamond/Bembo/Caslon (but not a clone or reproduction).
%  This font is automatically used for main text, with automatic variants
%  for header/footer and footnotes. It cannot be changed.
%    Bold is never used in main text, heading, or footnotes of popular fiction.
%  So instead of shipping bold fonts that would be ignored, Swainson "Bold"
%  is not bold, and "BoldItalic" is neither bold nor italic. Instead, these
%  files have charaters designed for different page header styles. Cheating!
%    Why require Swainson? It has metrics, character set, and OpenType
%  features that are known to Novelette. This allows macro definitions that
%  do not need to measure properties, or fork according to the font.
%    Swainson has a limited character set. If you need the occasional extra
%  character, you may manually request it from Libertinus Serif, using \alt.
%    You do not set sans-serif (sffamily) or monospace (ttfamily). But since
%  fontspec creates them, Novelette re-purposes these fonts. The sffamily is
%  Swainson (not actually sans), tweaked for use in header/footer.
%  The ttfamily (not actually monospace) is Swainson, tweaked for use in
%  footnotes and smalltext.
%%
\DeclareDocumentCommand\no@such@font{O{}mO{}}{%
  \nvt@err{Cannot use fontspec commands to choose or modify fonts}%
    {Although Novelette uses `fontspec' to define fonts, you may not use^^J%
     \string\fontspec, \string\setmainfont, \string\newfontfamily,^^J%
     or any other `fontspec' commands for fonts and features. They are all^^J%
     pre-defined within Novelette. Why? See novelette docs for explanation.}
}
\LetLtxMacro\fontspec\no@such@font\relax
\LetLtxMacro\setmainfont\no@such@font\relax
\LetLtxMacro\setsansfont\no@such@font\relax
\LetLtxMacro\setmonofont\no@such@font\relax
\LetLtxMacro\setmathrm\no@such@font\relax
\LetLtxMacro\setboldmathrm\no@such@font\relax
\LetLtxMacro\setmathsf\no@such@font\relax
\LetLtxMacro\setmathtt\no@such@font\relax
\LetLtxMacro\setromanfont\no@such@font\relax
\LetLtxMacro\newfontfamily\no@such@font\relax
\LetLtxMacro\renewfontfamily\no@such@font\relax
\LetLtxMacro\setfontfamily\no@such@font\relax
\LetLtxMacro\providefontfamily\no@such@font\relax
\LetLtxMacro\newfontface\no@such@font\relax
\LetLtxMacro\renewfontface\no@such@font\relax
\LetLtxMacro\setfontface\no@such@font\relax
\LetLtxMacro\providefontface\no@such@font\relax
\LetLtxMacro\defaultfontfeatures\no@such@font\relax
\LetLtxMacro\addfontfeatures\no@such@font\relax
\LetLtxMacro\addfontfeature\no@such@font\relax
\LetLtxMacro\newfontfeature\no@such@font\relax
\LetLtxMacro\newopentypefeature\no@such@font\relax
\LetLtxMacro\aliasfontfeature\no@such@font\relax
\LetLtxMacro\newfontscript\no@such@font\relax
\LetLtxMacro\newfontlanguage\no@such@font\relax
%%

%% Enable (allows something that otherwise is not built-in). Developer use.
\newif\iflvdebug@enabled
\newcommand\enable[1]{
  \IfSubStr{#1}{lvdebug}{\global\lvdebug@enabledtrue}{}
}
%%

%%
\def\check@align{
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\temp@d\center}
  \c@se{c}{\let\temp@d\center}
  \c@se{l}{\let\temp@d\raggedright}
  \c@se{r}{\let\temp@d\raggedleft}
  \c@se{o}{\ifodd\c@page\let\temp@d\raggedleft\else\let\temp@d\raggedright\fi}
  \c@se{i}{\ifodd\c@page\let\temp@d\raggedright\else\let\temp@d\raggedleft\fi}
  \ifcase@match\else\@okfalse\let\temp@d\center\fi
  \StrDel{\temp@s}{align=\temp@n,}[\temp@s]
}
%%

%%
\def\check@font{
  \StrBehind{\temp@s}{font=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\gdef\temp@d{}}
  \c@se{main}{\gdef\temp@d{}}
  \c@se{light}{\gdef\temp@d{light}\let\itshape\relax}
  \c@se{dark}{\gdef\temp@d{dark}\let\itshape\relax}
  \c@se{deco}{\gdef\temp@d{deco}\let\itshape\relax}
  \c@se{drama}{\gdef\temp@d{drama}\let\itshape\relax}
  \ifcase@match\else\@okfalse\gdef\temp@d{}\fi
  \StrDel{\temp@s}{font=\temp@n,}[\temp@s]
}
%%

%%
\def\check@scale{
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>6}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match\def\temp@d{\temp@n}\else\def\temp@d{1}\fi
}
%%

%%
\def\bad@style#1#2{ % command name, default scale.
    \nvt@err{Bad setting in \string\#1}%
      {Format: \string\#1{align=A,scale=S,font=F}^^J%
       You may set one or more of them. Default used for anything not set.^^J%
       A is one of c l r o i. Horizontal alignment. Default c.^^J%
       S is number >=1. Scale. Default #2.^^J%
       F is one of main,light,dark,deco,drama. Stylistic font. Default main.}%
}
%%

%% Name Style (typically used for chapter titles)
%    In document body, within upperpage or display environements only,
%  \name{text} writes its text according to \namestyle setting. This provides
%  a uniform appearance for each instance of \name.
%    Format: \namestyle{align=A,scale=S,font=F}
%      where A = l r c o i, default c. 1<=S<=6, default 1.6.
%      F is one of main,light,dark,deco,drama. Default main.
%%
\let\nn@b\center \let\nn@e\endcenter \def\nn@scale{1.6} \def\nn@lf{main}
\let\nn@font\relax
\def\name@style{align=\nn@align,scale=\nn@scale,font=\nn@lf}
\newcommand\namestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\let\nn@font\f@light\gdef\nn@lf{light}}
  \ifthenelse{\equal{\temp@d}{dark}}{\let\nn@font\f@dark\gdef\nn@lf{dark}}
  \ifthenelse{\equal{\temp@d}{deco}}{\let\nn@font\f@deco\gdef\nn@lf{deco}}
  \ifthenelse{\equal{\temp@d}{drama}}{\let\nn@font\f@drama\gdef\nn@lf{drama}}
  \check@align
  \let\nn@b\temp@d
  \ifx\nn@b\center\let\nn@e\endcenter\else\let\nn@e\relax\fi
  \check@scale
  \xdef\nn@scale{\temp@d}
  \if@ok\else\bad@style{namestyle}{1.6}\fi
}
%%

%% Subname Style (typically used for chapter subtitles)
%    In document body, within upperpage or display environements only,
%  \subname{text} writes its text according to \subnamestyle setting.
%  This provides a uniform appearance for each instance of \subname.
%    Format: \subnamestyle{align=A,scale=S,font=F}
%      where A = l r c o i, default c. 1<=S<=2, default 1.15.
%      F is one of main,light,dark,deco,drama. Default main.
%%
\let\sn@b\center \let\sn@e\endcenter \def\sn@scale{1.15} \def\sn@lf{main}
\let\sn@font\relax
\def\subname@style{align=\sn@align,scale=\sn@scale,font=\sn@lf}
\newcommand\subnamestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\let\sn@font\f@light\gdef\sn@lf{light}}
  \ifthenelse{\equal{\temp@d}{dark}}{\let\sn@font\f@dark\gdef\sn@lf{dark}}
  \ifthenelse{\equal{\temp@d}{deco}}{\let\sn@font\f@deco\gdef\sn@lf{deco}}
  \ifthenelse{\equal{\temp@d}{drama}}{\let\sn@font\f@drama\gdef\sn@lf{drama}}
  \check@align
  \let\sn@b\temp@d
  \ifx\sn@b\center\let\sn@e\endcenter\else\let\sn@e\relax\fi
  \check@scale
  \xdef\sn@scale{\temp@d}
  \if@ok\else\bad@style{subnamestyle}{1.15}\fi
}
%%

%% \formata
\let\fa@b\center \let\fa@e\endcenter \def\fa@scale{1.15} \def\fa@lf{main}
\let\fa@font\relax
\def\fa@style{align=\fa@align,scale=\fa@scale,font=\fa@lf}
\newcommand\formatastyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\fa@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\fa@lf{dark}}{}
  \ifthenelse{\equal{\temp@d}{deco}}{\gdef\fa@lf{deco}}{}
  \ifthenelse{\equal{\temp@d}{drama}}{\gdef\fa@lf{drama}}{}
  \check@align
  \let\fa@b\temp@d
  \ifx\fa@b\center\let\fa@e\endcenter\else\let\fa@e\relax\fi
  \check@scale
  \xdef\fa@scale{\temp@d}
  \if@ok\else\bad@style{formatastyle}{1}\fi
}
%%

%% \formatb
\let\fb@b\center \let\fb@e\endcenter \def\fb@scale{1} \def\fb@lf{main}
\let\fb@font\relax
\def\fb@style{align=\fb@align,scale=\fb@scale,font=\fb@lf}
\newcommand\formatbstyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\fb@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\fb@lf{dark}}{}
  \ifthenelse{\equal{\temp@d}{deco}}{\gdef\fb@lf{deco}}{}
  \ifthenelse{\equal{\temp@d}{drama}}{\gdef\fb@lf{drama}}{}
  \check@align
  \let\fb@b\temp@d
  \ifx\fb@b\center\let\fb@e\endcenter\else\let\fb@e\relax\fi
  \check@scale
  \xdef\fb@scale{\temp@d}
  \if@ok\else\bad@style{formatbstyle}{1}\fi
}
%%

%% \formatc
\let\fc@b\center \let\fc@e\endcenter \def\fc@scale{1.15} \def\fc@lf{main}
\let\fc@font\relax
\def\fc@style{align=\fc@align,scale=\fc@scale,font=\fc@lf}
\newcommand\formatcstyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\fc@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\fc@lf{dark}}{}
  \ifthenelse{\equal{\temp@d}{deco}}{\gdef\fc@lf{deco}}{}
  \ifthenelse{\equal{\temp@d}{drama}}{\gdef\fc@lf{drama}}{}
  \check@align
  \let\fc@b\temp@d
  \ifx\fc@b\center\let\fc@e\endcenter\else\let\fc@e\relax\fi
  \check@scale
  \xdef\fc@scale{\temp@d}
  \if@ok\else\bad@style{formatcstyle}{1}\fi
}
%%

%% \formatd
\let\fd@b\center \let\fd@e\endcenter \def\fd@scale{1.15} \def\fd@lf{main}
\let\fd@font\relax
\def\fd@style{align=\fd@align,scale=\fd@scale,font=\fd@lf}
\newcommand\formatdstyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\fd@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\fd@lf{dark}}{}
  \ifthenelse{\equal{\temp@d}{deco}}{\gdef\fd@lf{deco}}{}
  \ifthenelse{\equal{\temp@d}{drama}}{\gdef\fd@lf{drama}}{}
  \check@align
  \let\fd@b\temp@d
  \ifx\fd@b\center\let\fd@e\endcenter\else\let\fd@e\relax\fi
  \check@scale
  \xdef\fd@scale{\temp@d}
  \if@ok\else\bad@style{formatdstyle}{1}\fi
}
%%

%% \formate
\let\fe@b\center \let\fe@e\endcenter \def\fe@scale{1.15} \def\fe@lf{main}
\let\fe@font\relax
\def\fe@style{align=\fe@align,scale=\fe@scale,font=\fe@lf}
\newcommand\formatestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\fe@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\fe@lf{dark}}{}
  \ifthenelse{\equal{\temp@d}{deco}}{\gdef\fe@lf{deco}}{}
  \ifthenelse{\equal{\temp@d}{drama}}{\gdef\fe@lf{drama}}{}
  \check@align
  \let\fe@b\temp@d
  \ifx\fe@b\center\let\fe@e\endcenter\else\let\fe@e\relax\fi
  \check@scale
  \xdef\fe@scale{\temp@d}
  \if@ok\else\bad@style{formatestyle}{1}\fi
}
%%

%% \formatf
\let\ff@b\center \let\ff@e\endcenter \def\ff@scale{1.15} \def\ff@lf{main}
\let\ff@font\relax
\def\ff@style{align=\ff@align,scale=\ff@scale,font=\ff@lf}
\newcommand\formatfstyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@font
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\ff@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\ff@lf{dark}}{}
  \ifthenelse{\equal{\temp@d}{deco}}{\gdef\ff@lf{deco}}{}
  \ifthenelse{\equal{\temp@d}{drama}}{\gdef\ff@lf{drama}}{}
  \check@align
  \let\ff@b\temp@d
  \ifx\ff@b\center\let\ff@e\endcenter\else\let\ff@e\relax\fi
  \check@scale
  \xdef\ff@scale{\temp@d}
  \if@ok\else\bad@style{formatfstyle}{1}\fi
}
%%


%% Scene Style (chapter scenes, when labeled by text)
%    Novelette provides several methods for spearating scenes within chapters.
%  One of them is \scene{title of scene}. Setting \scenestyle set a uniform
%  appearance for each such \scene. It does not affect other \scene methods.
%%
\let\sc@b\raggedright \let\sc@e\relax \def\sc@scale{1.1}
\def\sc@stretch{.99} % Calculated, not set. 
\def\scene@style{align=\sc@align,scale=\sc@scale}
\newcommand\scenestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\sc@b\raggedright\let\sc@e\relax}
  \c@se{c}{\let\sc@b\center\let\sc@e\endcenter}
  \c@se{l}{\let\sc@b\raggedright\let\sc@e\relax}
  \c@se{r}{\let\sc@b\raggedleft\let\sc@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\sc@b\raggedleft\let\sc@e\relax
    \else
      \let\sc@b\raggedright\let\sc@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\sc@b\raggedright\let\sc@e\relax
    \else
      \let\sc@b\raggedleft\let\sc@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>1.25}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\sc@scale{\temp@n}
    \xdef\sc@stretch{\fpeval{1.1 - .1*\sc@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else%
    \nvt@err{Bad setting in \string\scenestyle}%
      {Format: \string\subnamestyle{align=A,scale=S}^^J%
       You may set one or more of them. Default used for anything not set.^^J%
       A is one of c l r o i. Horizontal alignment. Default c.^^J%
       S is number >=1 and <=1.25. Scale. Default 1.1}%
  \fi
}
%%

%% Language (hyphenation, also French punctuation)
%    Most LaTeX document classes use either package babel or polyglossia,
%  to automate language-specific features such as date/time format, etc.
%    Novelette does not automate those things. Need the time? Type it yourself.
%  Need chapter numbers? Type them yourself.
%    Setting \language[option]{languageName} chooses hyphenation patterns
%  for the languageName. They are the same patterns that would be used by
%  babel or polyglossia, but without using either of those packages.
%    In the case of German or English, the option selects a hyphenation
%  variant, based on spelling. In the case of French, the option selects how
%  punctuation spacing will be applied.
%    The default \language{english} has the advatnage that all LaTeX systems
%  have it. But if your language is actually English, use [us] or [uk] option
%  for better results.
%    In all cases, your system must have the hyphenation patterns for your
%  language. It probably does. If necessary, install `hyphen-L' where L
%  is the chosen language. If German, also install `dehyph-expl'.
%%
\LetLtxMacro\orig@language\language\relax % Later restored.
\def\lang@option{} \def\lang@tail{}
\def\set@lang{english} \def\lang@hyph{english}
\frenchspacing \lefthyphenmin=2 \righthyphenmin=2
\DeclareDocumentCommand\set@language{O{}mO{}}{
  \StrDel{#2}{ }[\temp@s]
  \IfSubStr{:english:french:german:spanish:italian:catalan:}{:\temp@s:}{
    \@oktrue\xdef\set@lang{\temp@s}\xdef\lang@hyph{\temp@s}
  }{\@okfalse}
  \StrDel{#1#3}{ }[\temp@n]
  \case@test{[\temp@n]}
  \ifthenelse{\equal{\set@lang}{english}}{
    \nonfrenchspacing \righthyphenmin=3
    \c@se{[]}{\gdef\lang@tail{(option [us] or [uk] is better)}}
    \c@se{[us]}{\gdef\lang@hyph{usenglishmax}}
    \c@se{[uk]}{\gdef\lang@hyph{ukenglish}}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \ifthenelse{\equal{\set@lang}{french}}{
    \gdef\lang@hyph{french}
    \IfSubStr{:[fr]:[ch]:[ca]:[x]:[]:}{:[\temp@n]:}{}{
      \xdef\lang@tail{(unknown [\temp@n] ignored)}
    }
  }{}
  \ifthenelse{\equal{\set@lang}{german}}{
    \c@se{[]}{\gdef\lang@hyph{german}\gdef\lang@tail{(default 1901 spelling)}}
    \c@se{[1901]}{\gdef\lang@hyph{german}}
    \c@se{[1996]}{\gdef\lang@hyph{ngerman}}
    \c@se{[1901x]}{\gdef\lang@hyph{dehyph-x-german}}
    \c@se{[1996x]}{\gdef\lang@hyph{dehyph-x-ngerman}}
    \c@se{[ch]}{\gdef\lang@hyph{swissgerman}}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfSubStr{:italian:spanish:catalan:}{:\set@lang:}{
    \xdef\lang@hyph{\set@lang}
    \nonfrenchspacing
    \c@se{[]}{}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfNada{\temp@n}{}{\xdef\lang@option{[\temp@n]}}
  \if@ok\else
    \nvt@err{Bad setting in \string\language[option]{language}}%
      {Languages: english french german italian spanish catalan.^^J%
       Options for english: us uk. (Default empty, but better with option.)^^J%
       Options for french: fr ch ca x. (Punctuation spacing. Default fr.)^^J%
       Options for german: 1901 1901x 1996 1996x ch. (ß/ss. Default 1901.)^^J%
       No options for italian, spanish, catalan.}%
  \fi
  \LetLtxMacro\language\no@optsetting\relax
}
\LetLtxMacro\language\set@language\relax
%%

%% Typography Flaws
%  These are parsed by lua.
%  Required format, with the quotes: "space separated character string"
%  The setting ensures that user input is adjusted to this format.
\newtoks\typo@single \newtoks\typo@double \newtoks\typo@doublest
\def\typo@single{""} \def\typo@double{""} \def\typo@doublest{""}
\DeclareDocumentCommand\onechartypo{sm}{ % Star is disregarded.
  \xdef\temp@s{#2} % So \'A becomes one Unicode character, etc.
  \StrDel{\temp@s}{"}[\temp@s]
  \StrDel{\temp@s}{'}[\temp@s]
  \StrSubstitute{\temp@s}{,}{ }[\temp@s]
  \xdef\typo@single{"\temp@s"}
}
\DeclareDocumentCommand\twochartypo{sm}{ % Star less urgent.
  \IfBooleanTF{#1}{
    \xdef\temp@s{#2}
    \StrDel{\temp@s}{"}[\temp@s]
    \StrDel{\temp@s}{'}[\temp@s]
    \StrSubstitute{\temp@s}{,}{ }[\temp@s]
    \xdef\typo@doublest{"\temp@s"}
  }{
    \xdef\temp@s{#2}
    \StrDel{\temp@s}{"}[\temp@s]
    \StrDel{\temp@s}{'}[\temp@s]
    \StrSubstitute{\temp@s}{,}{ }[\temp@s]
    \xdef\typo@double{"\temp@s"}
  }
}
\LetLtxMacro\twocharstypo\twochartypo\relax
%%

%% Paragraph Indent
%    Novelette automatically sets paragraph indent at 1em. You may set it to
%  a larger (not smaller) value. Best if expressed in em units.
%%
\newcommand\myparindent[1]{\gdef\myown@parindent{#1}}
%%

%% Uppercase Roman in frontmatter
\newcommand\myroman[1]{\IfBeginWith{#1}{R}{\gdef\my@roman{R}}{}}
%%

%% Page icons (if allowed by layout scheme)
%    Layout scheme=8 allows page icons, which are little images that
%  appear in page headers. This is fashionable in non-fiction, but rarely seen
%  in fiction, except for the kind of book that has many decorations to obscure
%  the fact that the story is weak or the writing is atrocious. Neverthless...
%    If you use them, page icons can only appear following \mainmatter.
%  Once set, they may not be changed (but they may disappear).
\def\pi@v{} \def\pi@r{}
\def\pi@v{} \def\pi@r{}
\DeclareDocumentCommand\pageicon{O{}mO{}}{ % May be re-used.
  \StrDel{#2}{ }[\temp@s]
  \xdef\pi@v{\temp@s}\xdef\pi@r{\temp@s}
  \StrDel{#1#3}{ }[\temp@n]
  \StrLeft{\temp@n}{1}[\temp@n]
  \case@test{\temp@n}
  \c@se{v}{\xdef\pi@v{\temp@s}} % verso
  \c@se{l}{\xdef\pi@v{\temp@s}} % left
  \c@se{e}{\xdef\pi@v{\temp@s}} % even
  \c@se{r}{\xdef\pi@r{\temp@s}} % recto, right
  \c@se{o}{\xdef\pi@r{\temp@s}} % odd
}
\LetLtxMacro\pageicons\pageicon\relax
%%

%% Settings that may only be used in Preamble:
\let\margin\margins\relax % In case mis-spelled.
\@onlypreamble\fontspec
\@onlypreamble\setmainfont
\@onlypreamble\setsansfont
\@onlypreamble\setmonofont
\@onlypreamble\setmathrm
\@onlypreamble\setboldmathrm
\@onlypreamble\setmathsf
\@onlypreamble\setmathtt
\@onlypreamble\setromanfont
\@onlypreamble\newfontfamily
\@onlypreamble\renewfontfamily
\@onlypreamble\setfontfamily
\@onlypreamble\providefontfamily
\@onlypreamble\newfontface
\@onlypreamble\renewfontface
\@onlypreamble\setfontface
\@onlypreamble\providefontface
\@onlypreamble\defaultfontfeatures
%\@onlypreamble\addfontfeatures
%\@onlypreamble\addfontfeature
%\@onlypreamble\newfontfeature
%\@onlypreamble\newopentypefeature
%\@onlypreamble\aliasfontfeature
\@onlypreamble\newfontscript
\@onlypreamble\newfontlanguage
\@onlypreamble\trimsize
\@onlypreamble\margins
\@onlypreamble\margin
\@onlypreamble\sheetfeed
\@onlypreamble\layout
\@onlypreamble\namestyle
\@onlypreamble\subnamestyle
\@onlypreamble\guides
\@onlypreamble\myparindent
\@onlypreamble\pageicon
\@onlypreamble\pageicons
\@onlypreamble\coverimage
\@onlypreamble\covertrim
%%


%%
\endinput
%%
%% End of file `novelette-settings.sty'.
