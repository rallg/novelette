%% This is file `novelette-settings.sty', part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-settings.sty}%
[2023/12/15 v0.25 LaTeX file (Preamble settings).]
%%

%% This file is loaded for interior and for cover.

%% SETTINGS
%    All settings are in this file, except \title, \author, in novelette.cls.
%  Novelette restricts your settings, so that you can rapidly get to writing
%  your book, instead of fooling around with settings.
%%

%% Internal Utility: Check if string can set a length (number with units).
\def\check@length#1{
  \@okfalse
  \IfEndWith{#1}{in}{\@oktrue}{}
  \IfEndWith{#1}{mm}{\@oktrue}{}
  \IfEndWith{#1}{cm}{\@oktrue}{}
  \IfEndWith{#1}{pt}{\@oktrue}{}
  \IfEndWith{#1}{bp}{\@oktrue}{}
  \ifdefined\forceindent\IfEndWith{#1}{em}{\@oktrue}{}\fi % AtBeginDocument.
  \StrGobbleRight{#1}{2}[\temp@cl]
  \IfDecimal{\temp@cl}{}{\@okfalse}
}
%%

%% Mode (how the PDF is prepared).
%  Typesetting (paragraphs, pagination) is the same in all modes.
%  All modes, except final, label PDF metadata as not being final.
%  When your writing and editing is done, set \mode{final}.
%    draft -> Does not inspect images, shows overfull boxes.
%    shade -> Is draft, with margins and guides tinted gray.
%    typo -> Is draft, with typographic flaws inspected and highlighted.
%    typo* -> Is typo, with non-highlighted text changed to light gray.
%    final -> Inspects images, provides PDF/X unless requested otherwise.   
%    dev -> Is draft, with developer enhancements. Not for ordinary users.
%  With class option [cover], the mode setting is ignored. If compile succeeds,
%  then the result is final. If not, it will be marked as draft.
%%
\def\mode@tail{(default)}
\newcommand\mode[1]{
  \ifcover@rt\else
    \StrDel{#1}{ }[\temp@s]
    \@okfalse
    \IfSubStr{:draft:shade:typo:typo*:final:dev:}{:\temp@s:}{
      \@oktrue\xdef\@mode{\temp@s} \gdef\mode@tail{}
    }{}
    \if@ok\else\std@error{R}\fi
  \fi
}
%%

%% Trim Size (finished interior page size).
%  This setting is mandatory, whether processing interior or cover.
%    Trim size is the finished size of interior pages. It is the same as the
%  book size. This is your decision, so Novelette does not provide a default.
%    If you are using [cover], you must also provide this setting, so that
%  Novelette can test whether the cover size will fit around the book size.
%    Unlike standard LaTeX document classes, Novelette does not select
%  trim size from a list of papers (such as letterpaper, a4paper, etc.)
%  Instad, you provide the actual width and height, with units in|mm.
%    During manufacture, larger paper is fed through the printer. At the very
%  end, after rough-cut pages are bound into the rough-cut cover, the entire
%  book is "trimmed" to final size by a cutting machine. This is why books
%  manufactured using Perfect Print technology (typical of print-on-demand)
%  are so precisely aligned.
%%
\newlength\trim@w \newlength\trim@h % No defaults. Must be set.
\newcommand\trimsize[1]{ % w=length,h=length. Must be h>=w.
  \xdef\trim@size{#1}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\trim@w{\temp@n}
    \StrBehind{\temp@s}{h=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\trim@h{\temp@n}
    \fi
  \fi
  \if@ok
    \ifthenelse{\dimtest{\trim@h}{<}{\trim@w}}{\@okfalse}{}
  \fi
  \if@ok\else\fatal@error{D}\fi
}
%%

%% Intent (PDF/X Output Intent)
%    Many print-on-demand services prefer (or require) PDF/X files. This is
%  a subset of PDF, requiring certain things, and prohibiting other things.
%  Novelette has built-in capability to produce PDF/X, and will do it, unless
%  you set \intent{none}.
%    Output Intent is declared in PDF metadata. It tells the printer that
%  the graphics designer prepared the PDF in a color-managed workflow, for the
%  color rendition of a specific printing technology. Then, if that is the
%  actual technology used, the printed result will match the designer's intent. 
%  But it does not force the printer to use that technology.
%    Output Intent is important for magazines, and other publications that
%  require accurate color. But your book interior does not use color, and the
%  print service will not be committed to any particular color rendition for
%  your book cover.
%    Although Output Intent is irrelevant for your purposes (color or not),
%  it must be declared in PDF/X, as part of the standard. It will be ignored.
%    In modes other than final, Novelette does not produce PDF/X, and does not
%  declare an Output Intent. In final mode, Novelette produces PDF/X unless
%  you set \intent{none}.
%    The default intent is SWOP, shorthand for "U.S. Web Coated (SWOP) v2",
%  also known as "CGATS TR 001". This widely-used in the USA.
%    Other choices are FOGRA (shorthand for "FOGRA39L"), typical for Europe,
%  and JC (shorthand for "JC200103"), typical for Japan.
%%
\def\@intent{SWOP} \def\intent@tail{(default)}
\newcommand\intent[1]{
  \StrSubstitute{#1}{FOGRA39L}{FOGRA39}[\temp@s]
  \IfSubStr{:none:SWOP:FOGRA39:JC200103:custom:}{:\temp@s:}{
    \xdef\@intent{\temp@s} \gdef\intent@tail{}
  }{
    \std@error{S}
  }
}
%% Custom \intent. Only do this if you must. See Novelette documentation.
\def\cust@cat{ % Because escape characters are different in TeX and XMP.
  \catcode`\#=12
  \catcode`\_=12
  \catcode`\~=12
  \catcode`\$=12
  \catcode`\%=12
  \catcode`\&=12
  \edef\@pctchar{\expandafter\@gobble\string\%} \let\%\@pctchar
  \edef\@hashchar{\expandafter\@gobble\string\#} \let\#\@hashchar
  \edef\@ampchar{\expandafter\@gobble\string\&amp;} \let\&\@ampchar
  \edef\@dollarchar{\expandafter\@gobble\string\$} \let\$\@dollarchar
  \edef\@underchar{\expandafter\@gobble\string\_} \let\_\@underchar
  \edef\@tildechar{\expandafter\@gobble\string\~} \let\~\@tildechar
}
\def\customOIidentifier#1{\begingroup\cust@cat\xdef\OIidentifier{#1}\endgroup}
\def\customOIcondition#1{\begingroup\cust@cat\xdef\OIcondition{#1}\endgroup}
\def\customOIinfo#1{\begingroup\cust@cat\xdef\OIinfo{#1}\endgroup}
\def\customOIregistry#1{\begingroup\cust@cat\xdef\OIregistry{#1}\endgroup}
%%

%% Sheetfeed (when PDF page size differs from trimsize)
%    Important: Do not use this setting unless necessary. The default is same
%  as trimsize, which is almost always what you need. In any case, this setting
%  is ignored by [cover].
%    PDF page size is what you see (unless cropped) in PDF reader software.
%  Trim size is the finished interior page size. Most print services require
%  them to be the same: what you see is what you get.
%    In a few cases, especially when working with a human editor, or printing
%  for yourself on a home printer, you may need to center the trim size
%  (horizontally and vertically) in a standard paper size. You may use
%  \sheetfeed{letter} or \sheetfeed{A4} for that purpose.
%    Whether or not you use \sheetfeed, the PDF metadata states the actual
%  trim size (and whether it is centered in a larger sheet).
%%
\def\sheet@feed{trimsize} \def\sheetfeed@tail{(default)}
\newcommand\sheetfeed[1]{
  \StrDel{#1}{ }[\temp@s]
  \IfSubStr{:trimsize:letter:a4:A4:}{:\temp@s:}{
    \xdef\sheet@feed{#1}\@oktrue
  }{\@okfalse}
  \StrDel{\temp@s}{\sheet@feed}[\temp@s]
  \ifthenelse{\equal{\temp@s}{}}{
    \ifthenelse{\equal{\sheet@feed}{trimsize}}{}{\gdef\sheetfeed@tail{}}
  }{
    \std@error{T}
    \gdef\sheet@feed{trimsize}
    \gdef\sheetfeed@tail{(re-set to default, due to bad setting)}
  }
}
%%

%% Margins (excludes all printable material)
%    In Novelette, the four margins surround a rectangle, which is the entire
%  printable area. If you use header|footer, they appear within this rectangle,
%  not within a margin. There are no marginal notes.
%    Word processors (and some other LaTeX document classes) place material
%  in the margin areas. You cannot do that. So if you are required to have
%  margins of a certain size, be sure that your "margins" mean the same thing
%  as the required "margins".
%    There are four margins: top, outside, bottom, inside. The inside margin
%  includes a small area needed for binding glue. So if your page design
%  visually centers the text block at left and right, which is standard,
%  then the inside margin must be set slightly larger than the outside margin.
%    Many (not all) print-on-demand services require minimum margins of
%  0.5in (US) or 13mm (Europe), plus 0.125in (US) or 3mm (Europe) at inside.
%  The default margins meet the larger of these, all around.
%    Print-on-demand services generally reject artistic page layout, with
%  margin at outside or bottom. This is because the copies are printed in
%  various places by various machines, and handled by persons who know nothing
%  about your design intent. Artistic placement will be seen as mis-aligned.
%%
\newlength\m@top \newlength\m@out \newlength\m@bot \newlength\m@ins
\newif\ifmargin@lerted % True if following message already issued.
\def\margin@lert{
  \ifmargin@lerted\else
    \@lert{Unusual margin settings. Too small? No glue area?}
  \fi
  \global\margin@lertedtrue
}
\setlength\m@top{13mm} \setlength\m@out{13mm} % Defaults. 16.2mm>.625in,
\setlength\m@bot{13mm} \setlength\m@ins{16.2mm} % 13mm>.5in, diff>.125in>3mm.
\def\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm} \def\margin@tail{(defaults)}
\newcommand\margins[1]{
  \xdef\margin@setting{#1} \gdef\margin@tail{}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{t=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\m@top{\temp@n}
    \ifdimcomp{\m@top}{<}{.25in}{\margin@lert}{}%
    \StrDel{\temp@s}{t=\temp@n,}[\temp@s]
    \StrBehind{\temp@s}{o=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\m@out{\temp@n}
      \ifdimcomp{\m@out}{<}{.25in}{\margin@lert}{}%
      \StrDel{\temp@s}{o=\temp@n,}[\temp@s]
      \StrBehind{\temp@s}{b=}[\temp@n]
      \StrBefore{\temp@n}{,}[\temp@n]
      \check@length{\temp@n}
      \if@ok
        \global\deflength\m@bot{\temp@n}
        \ifdimcomp{\m@bot}{<}{.25in}{\margin@lert}{}%
        \StrDel{\temp@s}{b=\temp@n,}[\temp@s]
        \StrBehind{\temp@s}{i=}[\temp@n]
        \StrBefore{\temp@n}{,}[\temp@n]
        \check@length{\temp@n}
        \if@ok
          \global\deflength\m@ins{\temp@n}
          \ifdimcomp{\m@ins}{<}{.375in}{\margin@lert}{}%
          \StrDel{\temp@s}{i=\temp@n,}[\temp@s]
        \fi
      \fi
    \fi
  \fi
  \if@ok
    \setlength\temp@l{\m@out+3mm}
    \ifdimcomp{\m@ins}{<}{\temp@l}{\margin@lert}{}%
  \else
    \std@error{U}
    \setlength\m@top{13mm} \setlength\m@out{13mm} % Restore defaults.
    \setlength\m@bot{13mm} \setlength\m@ins{16.2mm}
    \gdef\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm}
    \gdef\margin@tail{(re-set to defaults)}
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNada{\temp@s}{}{
    \xdef\margin@cruft{\temp@s}
    \@lert{Ignored unknown `\margin@cruft' in \string\margins.}
  }
}
%%

%% Typesize (main font size)
%    Unlike standard LaTeX document classes, Novelette does not set font size
%  as a document class option. You may set it using \typesize, where the
%  size is specified in pt|bp. Decimal values are allowed, and often best.
%    If you do not set it yourself, Novelette will calculate a likely size,
%  based on other settings. The result will be in the range 11-12bp, usually
%  somewhere in between.
%%
\newcommand\typesize[1]{
  \check@length{#1}
  \if@ok
    \global\deflength\type@size{#1}
  \else
    \std@error{V}
  \fi
}
%%

%% Lines per page (main text block, not including header|footer)
%    Unlike standard LaTeX document classes, Novelette does not allow you to
%  set leading (baselineskip) directly. Instead, you may use \lines to set
%  the integer number of lines in the main text block. Then the leading
%  is calculated. If too tight to fit, an error results.
%    The default number of lines is calculated, based on other factors.
%%
\def\lines@tail{(calculated default)}
\newcommand\lines[1]{ % Integer lines per page, main text only.
  \IfInteger{#1}{
    \xdef\lines@pp{#1} \gdef\lines@tail{(your setting)}
  }{
    \std@error{W}
  }
}
%%

%% Layout (header/footer properties)
%    Novelette has its own method for creating headers and footers, because
%  popular fiction only need a few possibilities, much simpler than provided
%  by packages such as fancyhdr.
%    There are 8 possible layout schemes, numbered 1-8 (see documentation).
%  Each determineswhether there is a header and/or footer, and (if header)
%  its design. For developer use, scheme 0 omits both header and footer.
%    You may tweak the distance (gap) from header (if used) to main text,
%  and from main text to footer (if used).
%    If you use \enable{fallback}, then you may choose whether header and
%  footer are printed with the main serif font (Swainson), or with an
%  alternative sans-serif font (Libertinus Sans). Without \enable{fallback},
%  the header and footer always use Swainson. In any case, the header and
%  footer text are automatically tweaked, so that they look a bit different
%  than main text.
%    Format: \layout{scheme=I,hgap=H,fgap=F,font=T}
%      I->Integer 1-8, also 0 for dev. H,F->number 0.5-1. T->serif or sans.
%      Any order. May omit some or all, for defaults.
%    Defaults: I=2, hgap=1, fgap=1, font=serif.
%%
\def\layout@setting{scheme=2,hgap=1,fgap=1,font=serif}
\def\layout@tail{(defaults)}
\def\@scheme{2} \def\h@gap{1} \def\f@gap{1}
\newif\ifhas@sans \newif\ifsans@hf
\DeclareDocumentCommand\layout{m}{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{hgap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0.5}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\h@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{hgap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{fgap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0.5}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\f@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{fgap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{font=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{}
  \c@se{serif}{}
  \c@se{sans}{\has@sanstrue\sans@hftrue}
  \ifcase@match\else\@okfalse\fi
  \StrDel{\temp@s}{font=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{scheme=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>8}=1}{\@okfalse}%
        {\xdef\@scheme{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{scheme=\temp@n,}[\temp@s]
  \if@ok\else\std@error{X}\fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNada{\temp@s}{
    \gdef\layout@tail{}
  }{
    \xdef\layout@cruft{\temp@s}
    \@lert{Ignored unknown `\layout@cruft' in \string\layout.}
    \gdef\layout@tail{(ignored bad values)}
  }
  \ifsans@hf\def\temp@d{sans}\else\def\temp@d{serif}\fi
  \xdef\layout@setting{%
    scheme=\@scheme,hgap=\h@gap,fgap=\f@gap,font=\temp@d}
}
%%

%% Guides (for vertical positioning reference, in shade mode)
%    In \mode{shade}, the margins appear gray. If you set guides, they appear
%  as light gray bars, inside the darker left and right margins.
%    This may be useful when you wish to ensure that something appears at
%  a specific vertical position. For example, when you begin chapters with
%  the upperpage environment, it does not force the start of main text to
%  any particular line. You must do that by manually adding blank lines.
%  A guide pair can mark where the first of line of main text should be.
%    You may set up to 4 guides. Each is an integer number of lines, starting
%  at the top of the main text block (whether or not anything appears there).
%    Guides do not force anything. They are only visual references.
%  Format: \guides{A,B,C,D} where A,B,C,D are integer lines from top of main.
%%
\def\@guides{} \def\guides@tail{(no guides)}
\newcommand\guides[1]{
  \gdef\@guides{#1}\gdef\guides@tail{(only displayed in shade mode)}
}
%%

%% Fonts (you cannot set them; this is merely informative)
%    Novelette ships with Swainson font, designed for main text. It is vaguely
%  similar to Garamond/Bembo/Caslon (but not a clone or reproduction).
%  This font is automatically used for main text, with automatic variants
%  for header/footer and footnotes. It cannot be changed.
%    Bold is never used in main text, headings, or footnotes of popular fiction.
%  So instead of shipping bold fonts that would be ignored, the default setup
%  duplicates Regular/Italic to Bold/BoldItalic, for Swainson.
%    Why require Swainson? It has metrics, character set, and OpenType
%  features that are known to Novelette. This allows macro definitions that
%  do not need to measure properties, or fork according to the font. 
%    Swainson has a limited character set. If you need the occasional extra
%  character, you may manually request it from a fallback font.
%    You do not set sans-serif (sffamily) or monospace (ttfamily). But since
%  fontspec creates them, Novelette re-purposes these fonts. The sffamily is
%  Swainson (not actually sans) or Libertinus Sans. It is used in page headers.
%  The ttfamily (not actually monospace) is re-named footnote@font, and is used
%  only for footnotes and smalltext. It is Swainson at reduced size.
%%
\DeclareDocumentCommand\no@such@font{O{}mO{}}{\std@error{Z}}
\LetLtxMacro\setmainfont\no@such@font\relax
\LetLtxMacro\setsansfont\no@such@font\relax
\LetLtxMacro\setmonofont\no@such@font\relax
\LetLtxMacro\newfontfamily\no@such@font\relax
\LetLtxMacro\newfontface\no@such@font\relax
%%


%% Utility: check font features (prohibit some fontspec-custom features)
%    Within the document body, command \addfontfeature uses fontspec methods
%  to tweak font properties. Some of them are disallowed in Novelette.
%    If you use \addfontfeature anywhere, this checks whether your request
%  is permitted.
%%
\def\check@font@features#1{
  \@oktrue
  \IfSubStr{\temp@s}{olor=}{\@okfalse}{} % Color, color.
  \IfSubStr{\temp@s}{olour=}{\@okfalse}{} % Colour, colour.
  \IfSubStr{\temp@s}{pacity=}{\@okfalse}{} % Opacity, opacity.
  \IfSubStr{\temp@s}{FakeBold=}{\@okfalse}{}
  \IfSubStr{\temp@s}{FakeSlant=}{\@okfalse}{}
  \IfSubStr{\temp@s}{cale=}{\@okfalse}{} % Scale, scale.
  \IfSubStr{\temp@s}{gain=}{\@okfalse}{} % ScaleAgain.
}
%%


%% Enable (allows something that otherwise is not built-in)
%  How it works, for "something":
%    1. Create \newifsomething@enabled.
%    2. If set \enable{something}, then \global\ifsomething@enabledtrue.
%    3. Somewhere else in the code, take action|inaction based the boolean.
%  You may \enable{this,that} or \enable{this} and \enable{that}.
%    \enable{fallback} activates the \alt command, and also allows use of
%  sans-serif in header/footer. Requires package `libertinus-fonts'. 
%%
\newif\iffallback@enabled
\newif\ifRF@enabled % Uppercase Roman in frontmatter (instead of lowercase).
\newif\iflvdebug@enabled % Developer tool.
\newcommand\enable[1]{
  \IfSubStr{#1}{fallback}{\global\fallback@enabledtrue}{}
  \IfSubStr{#1}{lvdebug}{\global\lvdebug@enabledtrue}{}
  \IfSubStr{#1}{RF}{\global\RF@enabledtrue}{}
}
%%

%% Name Style (typically used for chapter titles)
%    In document body, within upperpage or display environements only,
%  \name{text} writes its text according to \namestyle setting. This provides
%  a uniform appearance for each instance of \name.
%    Format: \namestyle{align=A,scale=S}
%      where A = l r c o i, default c. 1<=S<=6, default 1.6.
%%
\let\nn@b\center \let\nn@e\endcenter \def\nn@scale{1.6}
\def\nn@stretch{.94} % Calculated, not set.
\def\name@style{align=\nn@align,scale=\nn@scale}
\newcommand\namestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\nn@b\center\let\nn@e\endcenter}
  \c@se{c}{\let\nn@b\center\let\nn@e\endcenter}
  \c@se{l}{\let\nn@b\raggedright\let\nn@e\relax}
  \c@se{r}{\let\nn@b\raggedleft\let\nn@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\nn@b\raggedleft\let\nn@e\relax
    \else
      \let\nn@b\raggedright\let\nn@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\nn@b\raggedright\let\nn@e\relax
    \else
      \let\nn@b\raggedleft\let\nn@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>6}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\nn@scale{\temp@n}
    \xdef\nn@stretch{\fpeval{1.1 - .1*\nn@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else\std@error{b}\fi
}
%%

%% Subbame Style (typically used for chapter subtitles)
%    In document body, within upperpage or display environements only,
%  \subname{text} writes its text according to \subnamestyle setting.
%  This provides a uniform appearance for each instance of \subname.
%    Format: \subnamestyle{align=A,scale=S}
%      where A = l r c o i, default c. 1<=S<=2, default 1.2.
%%
\let\sn@b\center \let\sn@e\endcenter \def\sn@scale{1.2}
\def\sn@stretch{.98} % Calculated, not set.
\def\subname@style{align=\sn@align,scale=\sn@scale}
\newcommand\subnamestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\sn@b\center\let\sn@e\endcenter}
  \c@se{c}{\let\sn@b\center\let\sn@e\endcenter}
  \c@se{l}{\let\sn@b\raggedright\let\sn@e\relax}
  \c@se{r}{\let\sn@b\raggedleft\let\sn@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\sn@b\raggedleft\let\sn@e\relax
    \else
      \let\sn@b\raggedright\let\sn@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\sn@b\raggedright\let\sn@e\relax
    \else
      \let\sn@b\raggedleft\let\sn@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>2}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\sn@scale{\temp@n}
    \xdef\sn@stretch{\fpeval{1.1 - .1*\sn@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else\std@error{b}\fi
}
%%

%% Scene Style (chapter scenes, when labeled by text)
%    Novelette provides several methods for spearating scenes within chapters.
%  One of them is \scene{title of scene}. Setting \scenestyle set a uniform
%  appearance for each such \scene. It does not affect other \scene methods.
%%
\let\sc@b\raggedright \let\sc@e\relax \def\sc@scale{1.1}
\def\sc@stretch{.99} % Calculated, not set. 
\def\scene@style{align=\sc@align,scale=\sc@scale}
\newcommand\scenestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\sc@b\raggedright\let\sc@e\relax}
  \c@se{c}{\let\sc@b\center\let\sc@e\endcenter}
  \c@se{l}{\let\sc@b\raggedright\let\sc@e\relax}
  \c@se{r}{\let\sc@b\raggedleft\let\sc@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\sc@b\raggedleft\let\sc@e\relax
    \else
      \let\sc@b\raggedright\let\sc@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\sc@b\raggedright\let\sc@e\relax
    \else
      \let\sc@b\raggedleft\let\sc@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>1.25}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\sc@scale{\temp@n}
    \xdef\sc@stretch{\fpeval{1.1 - .1*\sc@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else\std@error{b}\fi
}
%%

%% Language (hyphenation, also French punctuation)
%    Most LaTeX document classes use either package babel or polyglossia,
%  to automate language-specific features such as date/time format, etc.
%    Novelette does not automate those things. Need the time? Type it yourself.
%  Need chapter numbers? Type them yourself.
%    Setting \language[option]{languageName} chooses hyphenation patterns
%  for the languageName. They are the same patterns that would be used by
%  babel or polyglossia, but without using either of those packages.
%    In the case of German or English, the option selects a hyphenation
%  variant, based on spelling. In the case of French, the option selects how
%  punctuation spacing will be applied.
%    The default \language{english} has the advatnage that all LaTeX systems
%  have it. But if your language is actually English, use [us] or [uk] option
%  for better results.
%    In all cases, your system must have the hyphenation patterns for your
%  language. It probably does. If necessary, install `hyphen-L' where L
%  is the chosen language. If German, also install `dehyph-expl'.
%%
\LetLtxMacro\orig@language\language\relax % Later restored.
\def\lang@option{} \def\lang@tail{}
\def\set@lang{english} \def\lang@hyph{english}
\frenchspacing \lefthyphenmin=2 \righthyphenmin=2
\DeclareDocumentCommand\set@language{O{}mO{}}{
  \StrDel{#2}{ }[\temp@s]
  \IfSubStr{:english:french:german:spanish:italian:catalan:}{:\temp@s:}{
    \@oktrue\xdef\set@lang{\temp@s}\xdef\lang@hyph{\temp@s}
  }{\@okfalse}
  \StrDel{#1#3}{ }[\temp@n]
  \case@test{[\temp@n]}
  \ifthenelse{\equal{\set@lang}{english}}{
    \nonfrenchspacing \righthyphenmin=3
    \c@se{[]}{\gdef\lang@tail{(option [us] or [uk] is better)}}
    \c@se{[us]}{\gdef\lang@hyph{usenglishmax}}
    \c@se{[uk]}{\gdef\lang@hyph{ukenglish}}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \ifthenelse{\equal{\set@lang}{french}}{
    \gdef\lang@hyph{french}
    \IfSubStr{:[fr]:[ch]:[ca]:[x]:[]:}{:[\temp@n]:}{}{
      \xdef\lang@tail{(unknown [\temp@n] ignored)}
    }
  }{}
  \ifthenelse{\equal{\set@lang}{german}}{
    \c@se{[]}{\gdef\lang@hyph{german}\gdef\lang@tail{(default 1901 spelling)}}
    \c@se{[1901]}{\gdef\lang@hyph{german}}
    \c@se{[1996]}{\gdef\lang@hyph{ngerman}}
    \c@se{[1901x]}{\gdef\lang@hyph{dehyph-x-german}}
    \c@se{[1996x]}{\gdef\lang@hyph{dehyph-x-ngerman}}
    \c@se{[ch]}{\gdef\lang@hyph{swissgerman}}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfSubStr{:italian:spanish:catalan:}{:\set@lang:}{
    \xdef\lang@hyph{\set@lang}
    \nonfrenchspacing
    \c@se{[]}{}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfNada{\temp@n}{}{\xdef\lang@option{[\temp@n]}}
  \if@ok\else\std@error{d}\fi
}
\LetLtxMacro\language\set@language\relax
%%

%% Typography Flaws
%  These are parsed by lua.
%  Required format, with the quotes: "space separated character string"
%  The setting ensures that user input is adjusted to this format.
\newtoks\typo@single \newtoks\typo@double \newtoks\typo@doublest
\DeclareDocumentCommand\onechartypo{sm}{ % Star is disregarded.
  \xdef\temp@s{#2} % So \'A becomes one Unicode character, etc.
  \StrDel{\temp@s}{"}[\temp@s]
  \StrDel{\temp@s}{'}[\temp@s]
  \StrSubstitute{\temp@s}{,}{ }[\temp@s]
  \xdef\typo@single{"\temp@s"}
}
\DeclareDocumentCommand\twochartypo{sm}{ % Star less urgent.
  \IfBooleanTF{#1}{
    \xdef\temp@s{#2}
    \StrDel{\temp@s}{"}[\temp@s]
    \StrDel{\temp@s}{'}[\temp@s]
    \StrSubstitute{\temp@s}{,}{ }[\temp@s]
    \xdef\typo@doublest{"\temp@s"}
  }{
    \xdef\temp@s{#2}
    \StrDel{\temp@s}{"}[\temp@s]
    \StrDel{\temp@s}{'}[\temp@s]
    \StrSubstitute{\temp@s}{,}{ }[\temp@s]
    \xdef\typo@double{"\temp@s"}
  }
}
\LetLtxMacro\twocharstypo\twochartypo\relax
%%

%% Paragraph Indent
%    Novelette automatically sets paragraph indent at 1em. You may set it to
%  a larger (not smaller) value. Best if expressed in em units.
%%
\newcommand\myparindent[1]{\gdef\myown@parindent{#1}}
%%

%% Cover Image (only when option [cover])
%    Novelette cannot create cover artwork, but it can process a cover image
%  to standards. The image must be jpg format (not vector drawing),
%  at 300 pixels/inch, CMYK at 240% ink limit. These requirements are met
%  by pre-processing your artwork with script cmyk4nvt, included with the
%  Novelette documentation.
%    When you use option [cover], Novelette will ascertain that the image
%  was pre-processed by cmyk4nvt. If not, then (depending on what you provide)
%  it may either reject the image, or continue to a result in draft mode.
%    Format: \coverimage{filename.jpg} with extension.
%      Also: \coverimage{subfolder/filename.jpg} relative to main document.
\newcommand\coverimage[1]{
  \@oktrue
  \IfBeginWith{#1}{/}{\@okfalse}{}
  \IfSubStr{#1}{://}{\@okfalse}{}
  \IfBeginWith{#1}{..}{\@okfalse}{}
  \if@ok\else\fatal@error{E}\fi
  \IfEndWith{#1}{.jpg}{}{\fatal@error{F}}{}
  \gdef\cover@image{#1}
}
%%

%% Cover Trim (finished cover size, after bleed removed)
%    The finished cover image wraps around the book block, including the
%  rear cover, spine, and front cover.
%    You will actually prepare a larger image, which exceeds the above,
%  by a bleed area on all four sides. Typical width of bleed area is 0.125in
%  or 3mm.
%    \covertrim{w=width,h=height} tells Novelette what the finished cover size
%  will be, after bleed is removed. In other words, it is rear+spine+front.
%    The covertrim height must be exactly the same as the interior page height.
%  The covertrim width must be more than double the interior page width.
%  Novelette checks these. If they do not make sense, an error results.  
%%
\newlength\covertrim@w \newlength\covertrim@h
\newcommand\covertrim[1]{
  \StrSubstitute{#1,}{ }{}[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \StrBehind{\temp@s}{h=}[\temp@d]
    \StrBefore{\temp@d}{,}[\temp@d]
    \check@length{\temp@d}
  \fi
  \if@ok
    \gdef\cover@trim{#1}
    \global\deflength\covertrim@w{\temp@n}
    \global\deflength\covertrim@h{\temp@d}
  \else
    \fatal@error{G}
  \fi
}
%%

%% Ignored settings (option-specific)
%    Several settings apply only with class option [cover], and several apply
%  only when not [cover]. Instead of throwing an error, inappropriate settings
%  are silently ignored.
%%
\DeclareDocumentCommand\ignore@this@command{O{}mO{}}{} % Do-nothing.
\ifcover@rt % Ignore interior-specific settings.
  \def\@mode{final} % Default.
  \def\mod@xmplabel{COVER } % Default.
  \def\sheetfeed#1{}
  \def\margins#1{}
  \def\typesize#1{}
  \def\lines#1{}
  \def\layout#1{}
  \def\guides#1{}
  \def\namestyle#1{}
  \def\subnamestyle#1{}
  \def\myparindent#1{}
  \LetLtxMacro\language\ignore@this@command
\else % Ignore cover-specific settings.
  \def\@mode{draft} % Default.
  \def\mod@xmplabel{DRAFT } % Default.
  \def\covertrim#1{}
  \def\coverimage#1{}
\fi
%%

%% Page icons (if allowed by layout scheme)
%    Layout scheme=8 allows page icons, which are little images that
%  appear in page headers. This is fashionable in non-fiction, but rarely seen
%  in fiction, except for the kind of book that has many decorations to obscure
%  the fact that the story is weak or the writing is atrocious. Neverthless...
%    If you use them, page icons can only appear following \mainmatter.
%  Once set, they may not be changed (but they may disappear).
\def\pi@v{} \def\pi@r{}
\def\pi@v{} \def\pi@r{}
\DeclareDocumentCommand\pageicon{O{}mO{}}{ % May be re-used.
  \StrDel{#2}{ }[\temp@s]
  \xdef\pi@v{\temp@s}\xdef\pi@r{\temp@s}
  \StrDel{#1#3}{ }[\temp@n]
  \StrLeft{\temp@n}{1}[\temp@n]
  \case@test{\temp@n}
  \c@se{v}{\xdef\pi@v{\temp@s}} % verso
  \c@se{l}{\xdef\pi@v{\temp@s}} % left
  \c@se{e}{\xdef\pi@v{\temp@s}} % even
  \c@se{r}{\xdef\pi@r{\temp@s}} % recto, right
  \c@se{o}{\xdef\pi@r{\temp@s}} % odd
}
\LetLtxMacro\pageicons\pageicon\relax
%%

%% Settings that may only be used in Preamble:
\let\margin\margins\relax % In case mis-spelled.
\@onlypreamble\trimsize
\@onlypreamble\margins
\@onlypreamble\margin
\@onlypreamble\sheetfeed
\@onlypreamble\typesize
\@onlypreamble\lines
\@onlypreamble\layout
\@onlypreamble\namestyle
\@onlypreamble\subnamestyle
\@onlypreamble\guides
\@onlypreamble\myparindent
\@onlypreamble\pageicon
\@onlypreamble\pageicons
\@onlypreamble\coverimage
\@onlypreamble\covertrim
%%



%%
\endinput
%%
%% End of file `novelette-settings.sty'.
