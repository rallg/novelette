%% This is file `novelette-settings.sty',
%% part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-settings.sty}%
[2023/11/30 v0.22 LaTeX file (Preamble settings).]
%%


%% These settings are defined in novelette.cls, for both interior and cover:
%% \trimsize is always required. It is the interior page `trim size'.
%% \title and \author are required, except in draft mode (interior only).
%% \intent declares Output Intent. Default SWOP in final mode, otherwise none.


%% Utility: Check if string can be used to set a length (number with units).
\def\check@length#1{
  \@okfalse
  \IfEndWith{#1}{in}{\@oktrue}{}
  \IfEndWith{#1}{mm}{\@oktrue}{}
  \IfEndWith{#1}{cm}{\@oktrue}{}
  \IfEndWith{#1}{pt}{\@oktrue}{}
  \IfEndWith{#1}{bp}{\@oktrue}{}
  \ifdefined\forceindent\IfEndWith{#1}{em}{\@oktrue}{}\fi % AtBeginDocument.
  \StrGobbleRight{#1}{2}[\temp@cl]
  \IfDecimal{\temp@cl}{}{\@okfalse}
}
%%


%% SETTINGS THAT ARE ONLY USED FOR BOOK INTERIOR PAGES
%% ----------------------------------------------------------------------------


%% MODE
% Typesetting (paragraphs, pagination) is the same in all modes.
% All modes, except final, label PDF metadata as not being final.
% draft -> Does not inspect images, shows overfull boxes.
% shade -> Is draft, with margins and guides tinted gray.
% typo -> Is draft, with typographic flaws inspected and highlighted.
% typog -> Is typo, with non-highlighted text changed to light gray.
% final -> Inspects images, provides PDF/X unless requested otherwise.   
% When your writing and editing is done, set \mode{final}.
% dev -> Is draft, with developer enhancements. Not for ordinary users.
\def\mode@tail{(default)}
\newcommand\mode[1]{
  \ifcover@rt\else
    \StrDel{#1}{ }[\temp@s]
    \@okfalse
    \IfSubStr{:draft:shade:typo:typog:final:dev:}{:\temp@s:}{
      \@oktrue\xdef\@mode{\temp@s} \gdef\mode@tail{}
    }{}
    \if@ok\else\std@error{R}\fi
  \fi
}
%%


%% TRIM SIZE
% The trim size is finished size of interior pages. For print-on-demand
% softcover, it is the same as the book size.
%   This setting is mandatory, whether processing interior or cover.
\newlength\trim@w \newlength\trim@h % No defaults. Must be set.
\newcommand\trimsize[1]{ % w=length,h=length. Must be h>=w.
  \xdef\trim@size{#1}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\trim@w{\temp@n}
    \StrBehind{\temp@s}{h=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\trim@h{\temp@n}
    \fi
  \fi
  \if@ok
    \ifthenelse{\dimtest{\trim@h}{<}{\trim@w}}{\@okfalse}{}
  \fi
  \if@ok\else\fatal@error{D}\fi
}
%%


%% Intent sets PDF/X Output Intent.
\def\@intent{SWOP} \def\intent@tail{(default)}
\newcommand\intent[1]{
  \StrSubstitute{#1}{FOGRA39L}{FOGRA39}[\temp@s]
  \IfSubStr{:none:SWOP:FOGRA39:JC200103:custom:}{:\temp@s:}{
    \xdef\@intent{\temp@s} \gdef\intent@tail{}
  }{
    \std@error{S}
  }
}
%%


%% Sheetfeed. (Normally not used.)
% Most print services require that the PDF page size be same as book trimsize.
% In a few cases (or for home printing of drafts) the book pages
% are floated to the middle of a standard office paper size, letter or A4.
\def\sheet@feed{trimsize} \def\sheetfeed@tail{(default)}
\newcommand\sheetfeed[1]{
  \StrDel{#1}{ }[\temp@s]
  \IfSubStr{:trimsize:letter:a4:A4:}{:\temp@s:}{
    \xdef\sheet@feed{#1}\@oktrue
  }{\@okfalse}
  \StrDel{\temp@s}{\sheet@feed}[\temp@s]
  \reject@nonempty{\temp@s}
  \if@ok
    \ifthenelse{\equal{\sheet@feed}{trimsize}}{}{\gdef\sheetfeed@tail{}}
  \else
    \std@error{T}
    \gdef\sheet@feed{trimsize}
    \gdef\sheetfeed@tail{(re-set to default, due to bad setting)}
  \fi
}
%%


%% Margins. (Excludes all printable material. Inside is at spine.)
\newlength\m@top \newlength\m@out \newlength\m@bot \newlength\m@ins
\newif\ifmargin@lerted % True if following message already issued.
\def\margin@lert{
  \ifmargin@lerted\else
    \nvtalert{Unusual margin settings. Too small? No glue area?}
  \fi
  \global\margin@lertedtrue
}
\setlength\m@top{13mm} \setlength\m@out{13mm} % Defaults. 16.2mm>.625in,
\setlength\m@bot{13mm} \setlength\m@ins{16.2mm} % 13mm>.5in, diff>.125in>3mm.
\def\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm} \def\margin@tail{(defaults)}
\newcommand\margins[1]{
  \xdef\margin@setting{#1} \gdef\margin@tail{}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{t=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\m@top{\temp@n}
    \ifdimcomp{\m@top}{<}{.25in}{\margin@lert}{}%
    \StrDel{\temp@s}{t=\temp@n,}[\temp@s]
    \StrBehind{\temp@s}{o=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\m@out{\temp@n}
      \ifdimcomp{\m@out}{<}{.25in}{\margin@lert}{}%
      \StrDel{\temp@s}{o=\temp@n,}[\temp@s]
      \StrBehind{\temp@s}{b=}[\temp@n]
      \StrBefore{\temp@n}{,}[\temp@n]
      \check@length{\temp@n}
      \if@ok
        \global\deflength\m@bot{\temp@n}
        \ifdimcomp{\m@bot}{<}{.25in}{\margin@lert}{}%
        \StrDel{\temp@s}{b=\temp@n,}[\temp@s]
        \StrBehind{\temp@s}{i=}[\temp@n]
        \StrBefore{\temp@n}{,}[\temp@n]
        \check@length{\temp@n}
        \if@ok
          \global\deflength\m@ins{\temp@n}
          \ifdimcomp{\m@ins}{<}{.375in}{\margin@lert}{}%
          \StrDel{\temp@s}{i=\temp@n,}[\temp@s]
        \fi
      \fi
    \fi
  \fi
  \if@ok
    \setlength\temp@l{\m@out+3mm}
    \ifdimcomp{\m@ins}{<}{\temp@l}{\margin@lert}{}%
  \else
    \std@error{U}
    \setlength\m@top{13mm} \setlength\m@out{13mm} % Restore defaults.
    \setlength\m@bot{13mm} \setlength\m@ins{16.2mm}
    \gdef\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm}
    \gdef\margin@tail{(re-set to defaults)}
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNadaTF{\temp@s}{}{
    \xdef\margin@cruft{\temp@s}
    \nvtalert{Ignored unknown `\margin@cruft' in \string\margins.}
  }
}
%%


%% Typesize. (Main font size.)
% Default typesize is calculated, based on other factors.
\newcommand\typesize[1]{
  \check@length{#1}
  \if@ok
    \global\deflength\type@size{#1}
  \else
    \std@error{V}
  \fi
}
%%


%% Lines. (Lines per page, main text block, not including header|footer.)
% Default lines are calculated, based on other factors.
\def\lines@tail{(calculated default)}
\newcommand\lines[1]{ % Integer lines per page, main text only.
  \IfInteger{#1}{
    \xdef\lines@pp{#1} \gdef\lines@tail{(your setting)}
  }{
    \std@error{W}
  }
}
%%


%% LAYOUT (header/footer properties).
% Format: \layout{scheme=I,hgap=H,fgap=F,font=T}
% I->Integer 1-8, also 0 for dev. H,F->number 0.5-1. T->serif or sans.
% Any order. May omit some or all, for defaults.
\def\layout@setting{scheme=2,hgap=1,fgap=1,font=serif}
\def\layout@tail{(defaults)}
\def\@scheme{2} \def\h@gap{1} \def\f@gap{1}
\newif\ifhas@sans \newif\ifsans@hf
\DeclareDocumentCommand\layout{m}{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{hgap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0.5}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\h@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{hgap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{fgap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0.5}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\f@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{fgap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{font=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{}
  \c@se{serif}{}
  \c@se{sans}{
    \IfFileExists{libertinus-otf.sty}{
      \has@sanstrue\sans@hftrue
    }{
      \std@error{a}
    }
  }
  \ifcase@match\else\@okfalse\fi
  \StrDel{\temp@s}{font=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{scheme=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>8}=1}{\@okfalse}%
        {\xdef\@scheme{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{scheme=\temp@n,}[\temp@s]
  \if@ok\else\std@error{X}\fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNadaTF{\temp@s}{
    \gdef\layout@tail{}
  }{
    \xdef\layout@cruft{\temp@s}
    \nvtalert{Ignored unknown `\layout@cruft' in \string\layout.}
    \gdef\layout@tail{(ignored bad values)}
  }
  \ifsans@hf\def\temp@d{sans}\else\def\temp@d{serif}\fi
  \xdef\layout@setting{%
    scheme=\@scheme,hgap=\h@gap,fgap=\f@gap,font=\temp@d}
}
%%


%% Guides. (For vertical positioning reference, in shade mode.)
% Up to four guide pairs. This command is parsed in novelette-shading.sty.
% Format: \guides{A,B,C,D} where A,B,C,D are integer lines from top of main.
\def\@guides{} \def\guides@tail{(no guides)}
\newcommand\guides[1]{
  \gdef\@guides{#1}\gdef\guides@tail{(only displayed in shade mode)}
}
%%


%% Microtype options. (Passes \micro@set as package option to microtype.)
% You may only change stretch and shrink.
\def\micro@set{config=novelette-microtype,verbose=silent, protrusion=true}
\def\micro@stretch{20} \def\micro@shrink{20}
\def\set@microtype{stretch=20,shrink=20} \def\setmicro@tail{(defaults)}
\DeclareDocumentCommand\micro@type@set{m}{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{stretch=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfInteger{\temp@n}{\xdef\micro@stretch{\temp@n}}{\@okfalse}
  }
  \StrDel{\temp@s}{stretch=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{shrink=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfInteger{\temp@n}{\xdef\micro@shrink{\temp@n}}{\@okfalse}
  }
  \StrDel{\temp@s}{shrink=\temp@n,}[\temp@s]
  \StrDel{\temp@s}{,}[\temp@s]
  \if@ok
    \xdef\set@microtype{stretch=\micro@stretch,shrink=\micro@shrink}
    \gdef\setmicro@tail{}
  \else
    \std@error{Y}
  \fi
  \IfNadaTF{\temp@s}{}{
    \xdef\micro@cruft{\temp@s}
    \nvtalert{Unused `\micro@cruft' in \string\microtype.}
  }
}
\LetLtxMacro\microtype\micro@type@set\relax
%%


%% FONTS.
% Novelette ships with Swainson font, designed for main text. It is vaguely
% similar to Garamond/Bembo/Caslon (but not a clone or reproduction).
% This font is automatically used for main text, with automatic variants
% for header/footer and footnotes. It cannot be changed.
%   Bold is never used in main text, headings, or footnotes of popular fiction.
% So instead of shipping bold fonts that would be ignored, the default setup
% duplicates Regular/Italic to Bold/BoldItalic, for Swainson.
%   Why require Swainson? It has metrics, character set, and OpenType
% features that are known to Novelette. This allows macro definitions that
% do not need to measure properties, or fork according to the font. 
%   Swainson has a limited character set. If you need the occasional extra
% character, you may manually request it from a fallback font.
%   You do not set sans-serif (sffamily) or monospace (ttfamily). But since
% fontspec creates them, Novelette re-purposes these fonts. The sffamily is
% Swainson (not actually sans) or Libertinus Sans. It is used in page headers.
% The ttfamily (not actually monospace) is re-named head@font, and is used for
% footnotes and smalltext. It is Swainson at reduced size.
%%


%% Do not use the standard fontspec settings:
\DeclareDocumentCommand\no@such@font{O{}mO{}}{\std@error{Z}}
\LetLtxMacro\setmainfont\no@such@font\relax
\LetLtxMacro\setsansfont\no@such@font\relax
\LetLtxMacro\setmonofont\no@such@font\relax
\LetLtxMacro\newfontfamily\no@such@font\relax
\LetLtxMacro\newfontface\no@such@font\relax
%%


%% CHECK FONT FEATURES (prohibit some fontspec-custom features).
\def\check@font@features#1{
  \@oktrue
  \IfSubStr{\temp@s}{olor=}{\@okfalse}{} % Color, color.
  \IfSubStr{\temp@s}{olour=}{\@okfalse}{} % Colour, colour.
  \IfSubStr{\temp@s}{pacity=}{\@okfalse}{} % Opacity, opacity.
  \IfSubStr{\temp@s}{FakeBold=}{\@okfalse}{}
  \IfSubStr{\temp@s}{FakeSlant=}{\@okfalse}{}
  \IfSubStr{\temp@s}{cale=}{\@okfalse}{} % Scale, scale.
  \IfSubStr{\temp@s}{gain=}{\@okfalse}{} % ScaleAgain.
}
%%


%% HEADFONT
% Swainson is automatically used for page headers/footers. If you wish to use
% a different font, this sets it. The font will automatically be adjusted
% (after fontspec loads) so that its vertical metrics do not exceed Swainson.
\def\headfont@name{} \def\headfont@feat{}
\DeclareDocumentCommand\head@font{O{}mO{}}{
  \gdef\headfont@name{#2}
  \StrDel{#1,#3}{ }[\temp@s]
  \check@font@features{\temp@s}
  \if@ok
    \IfNadaTF{#1}{\IfNadaTF{#3}{}{\gdef\headfont@feat{#3}}}{
      \IfNadaTF{#3}{\gdef\headfont@feat{#1}}{\gdef\headfont@feat{#1,#3}}
    }
  \else
    \std@error{H}
  \fi
}
\LetLtxMacro\headfont\head@font\relax
%%%


%%% NAME (chapter title).
% Setting: \namestyle{align=A,scale=S}
% Format: A = l r c o i, default c. 1<=S<=6, default 1.6.
\let\nn@b\center \let\nn@e\endcenter \def\nn@scale{1.6}
\def\nn@stretch{.94} % Calculated, not set.
\def\name@style{align=\nn@align,scale=\nn@scale}
\newcommand\namestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\nn@b\center\let\nn@e\endcenter}
  \c@se{c}{\let\nn@b\center\let\nn@e\endcenter}
  \c@se{l}{\let\nn@b\raggedright\let\nn@e\relax}
  \c@se{r}{\let\nn@b\raggedleft\let\nn@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\nn@b\raggedleft\let\nn@e\relax
    \else
      \let\nn@b\raggedright\let\nn@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\nn@b\raggedright\let\nn@e\relax
    \else
      \let\nn@b\raggedleft\let\nn@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>6}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\nn@scale{\temp@n}
    \xdef\nn@stretch{\fpeval{1.1 - .1*\nn@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else\std@error{b}\fi
}
%%%


%%% SUBNAME (chapter subtitle).
% Setting: \subnamestyle{align=A,scale=S}
% Format: A = l r c o i, default c. 1<=S<=2, default 1.2.
\let\sn@b\center \let\sn@e\endcenter \def\sn@scale{1.2}
\def\sn@stretch{.98} % Calculated, not set.
\def\subname@style{align=\sn@align,scale=\sn@scale}
\newcommand\subnamestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\sn@b\center\let\sn@e\endcenter}
  \c@se{c}{\let\sn@b\center\let\sn@e\endcenter}
  \c@se{l}{\let\sn@b\raggedright\let\sn@e\relax}
  \c@se{r}{\let\sn@b\raggedleft\let\sn@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\sn@b\raggedleft\let\sn@e\relax
    \else
      \let\sn@b\raggedright\let\sn@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\sn@b\raggedright\let\sn@e\relax
    \else
      \let\sn@b\raggedleft\let\sn@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>2}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\sn@scale{\temp@n}
    \xdef\sn@stretch{\fpeval{1.1 - .1*\sn@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else\std@error{b}\fi
}
%%%


%%% SCENE (chapter scenes, when introduced by a line of scene title).
\let\sc@b\raggedright \let\sc@e\relax \def\sc@scale{1.1}
\def\sc@stretch{.99} % Calculated, not set. 
\def\scene@style{align=\sc@align,scale=\sc@scale}
\newcommand\scenestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@test{\temp@n}
  \c@se{}{\let\sc@b\raggedright\let\sc@e\relax}
  \c@se{c}{\let\sc@b\center\let\sc@e\endcenter}
  \c@se{l}{\let\sc@b\raggedright\let\sc@e\relax}
  \c@se{r}{\let\sc@b\raggedleft\let\sc@e\relax}
  \c@se{o}{
    \ifodd\c@page
      \let\sc@b\raggedleft\let\sc@e\relax
    \else
      \let\sc@b\raggedright\let\sc@e\relax
    \fi
  }
  \c@se{i}{
    \ifodd\c@page
      \let\sc@b\raggedright\let\sc@e\relax
    \else
      \let\sc@b\raggedleft\let\sc@e\relax
    \fi
  }
  \ifcase@match\else\@okfalse\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \case@matchtrue
  \IfDecimal{\temp@n}{
    \comp@re{\temp@n<1}{\case@matchfalse}{}
    \comp@re{\temp@n>1.25}{\case@matchfalse}{}
  }{
    \case@matchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifcase@match
    \xdef\sc@scale{\temp@n}
    \xdef\sc@stretch{\fpeval{1.1 - .1*\sc@scale}}
  \else
    \@okfalse
  \fi
  \if@ok\else\std@error{b}\fi
}
%%%


%%% LANGUAGE (does not interfere with TeX internal \languageN macro).
\LetLtxMacro\orig@language\language\relax % Later restored.
\def\lang@option{} \def\lang@tail{}
\def\set@lang{english} \def\lang@hyph{english}
\frenchspacing \lefthyphenmin=2 \righthyphenmin=2
\DeclareDocumentCommand\set@language{O{}mO{}}{
  \StrDel{#2}{ }[\temp@s]
  \IfSubStr{:english:french:german:spanish:italian:catalan:}{:\temp@s:}{
    \@oktrue\xdef\set@lang{\temp@s}\xdef\lang@hyph{\temp@s}
  }{\@okfalse}
  \StrDel{#1#3}{ }[\temp@n]
  \case@test{[\temp@n]}
  \ifthenelse{\equal{\set@lang}{english}}{
    \nonfrenchspacing \righthyphenmin=3
    \c@se{[]}{\gdef\lang@tail{(option [us] or [uk] is better)}}
    \c@se{[us]}{\gdef\lang@hyph{usenglishmax}}
    \c@se{[uk]}{\gdef\lang@hyph{ukenglish}}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \ifthenelse{\equal{\set@lang}{french}}{
    \gdef\lang@hyph{french}
    \IfSubStr{:[fr]:[ch]:[ca]:[x]:[]:}{:[\temp@n]:}{}{
      \xdef\lang@tail{(unknown [\temp@n] ignored)}
    }
  }{}
  \ifthenelse{\equal{\set@lang}{german}}{
    \c@se{[]}{\gdef\lang@hyph{german}\gdef\lang@tail{(default 1901 spelling)}}
    \c@se{[1901]}{\gdef\lang@hyph{german}}
    \c@se{[1996]}{\gdef\lang@hyph{ngerman}}
    \c@se{[1901x]}{\gdef\lang@hyph{dehyph-x-german}}
    \c@se{[1996x]}{\gdef\lang@hyph{dehyph-x-ngerman}}
    \c@se{[ch]}{\gdef\lang@hyph{swissgerman}}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfSubStr{:italian:spanish:catalan:}{:\set@lang:}{
    \xdef\lang@hyph{\set@lang}
    \nonfrenchspacing
    \c@se{[]}{}
    \ifcase@match\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfNadaTF{\temp@n}{}{\xdef\lang@option{[\temp@n]}}
  \if@ok\else\std@error{d}\fi
}
\LetLtxMacro\language\set@language\relax
%%%
\def\typo@one@letter{}
\newcommand\oneletter[1]{
  \xdef\temp@s{#1}
  \StrDel{\temp@s}{'}[\temp@s]
  \StrDel{\temp@s}{"}[\temp@s]
  \StrSubstitute{\temp@s}{,}{ }[\temp@s]
  \xdef\typo@one@letter{\temp@s}
}
\def\typo@two@letters{}
\newcommand\twoletters[1]{
  \xdef\temp@s{#1}
  \StrDel{\temp@s}{'}[\temp@s]
  \StrDel{\temp@s}{"}[\temp@s]
  \StrSubstitute{\temp@s}{,}{ }[\temp@s]
  \xdef\typo@two@letters{\temp@s}
}
\let\twoletter\twoletters\relax
%%%


%% Optionally over-ride default parindent:
\newcommand\myparindent[1]{\gdef\myown@parindent{#1}}
%%


%% Custom \intent:
\def\custom@cats{ % Because escape characters are different in TeX and XMP.
  \catcode`\#=12
  \catcode`\_=12
  \catcode`\~=12
  \catcode`\$=12
  \catcode`\%=12
  \catcode`\&=12
  \edef\@pctchar{\expandafter\@gobble\string\%}
  \let\%\@pctchar
  \edef\@hashchar{\expandafter\@gobble\string\#}
  \let\#\@hashchar
  \edef\@ampchar{\expandafter\@gobble\string\&amp;}
  \let\&\@ampchar
  \edef\@dollarchar{\expandafter\@gobble\string\$}
  \let\$\@dollarchar
  \edef\@underchar{\expandafter\@gobble\string\_}
  \let\_\@underchar
  \edef\@tildechar{\expandafter\@gobble\string\~}
  \let\~\@tildechar
}
\def\customOIidentifier#1{
  \begingroup\custom@cats\xdef\OIidentifier{#1}\endgroup
}
\def\customOIcondition#1{
  \begingroup\custom@cats\xdef\OIcondition{#1}\endgroup
}
\def\customOIinfo#1{
  \begingroup\custom@cats\xdef\OIinfo{#1}\endgroup
}
\def\customOIregistry#1{
  \begingroup\custom@cats\xdef\OIregistry{#1}\endgroup
}
%%



%% SETTINGS THAT ARE ONLY USED FOR COVER:
%% ----------------------------------------------------------------------------
%% Page size of PDF will be automatically set by measuring cover image size.


%% Image must be raster jpg, pre-processed by cmyk4nvt script.
\newcommand\coverimage[1]{
  \@oktrue
  \IfBeginWith{#1}{/}{\@okfalse}{}
  \IfSubStr{#1}{://}{\@okfalse}{}
  \IfBeginWith{#1}{..}{\@okfalse}{}
  \if@ok\else\fatal@error{E}\fi
  \IfEndWith{#1}{.jpg}{}{\fatal@error{F}}{}
  \gdef\cover@image{#1}
}
%%


%% Cover Trim is finished cover size, after bleed has been removed.
\newlength\covertrim@w \newlength\covertrim@h
\newcommand\covertrim[1]{
  \StrSubstitute{#1,}{ }{}[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \StrBehind{\temp@s}{h=}[\temp@d]
    \StrBefore{\temp@d}{,}[\temp@d]
    \check@length{\temp@d}
  \fi
  \if@ok
    \gdef\cover@trim{#1}
    \global\deflength\covertrim@w{\temp@n}
    \global\deflength\covertrim@h{\temp@d}
  \else
    \fatal@error{G}
  \fi
}
%%


%% IGNORE SETTINGS THAT DO NOT PERTAIN:
%% ----------------------------------------------------------------------------

\DeclareDocumentCommand\ignore@this@command{O{}mO{}}{} % Do-nothing.

%%
\ifcover@rt % Ignore interior-specific settings.
  \def\@mode{final} % Default.
  \def\mod@xmplabel{COVER } % Default.
  \def\sheetfeed#1{}
  \def\margins#1{}
  \def\typesize#1{}
  \def\lines#1{}
  \def\layout#1{}
  \def\guides#1{}
  \def\microtype#1{}
  \def\namestyle#1{}
  \def\subnamestyle#1{}
  \def\myparindent#1{}
  \LetLtxMacro\language\ignore@this@command
\else % Ignore cover-specific settings.
  \def\@mode{draft} % Default.
  \def\mod@xmplabel{DRAFT } % Default.
  \def\covertrim#1{}
  \def\coverimage#1{}
\fi
%%


%% Issue warning if one or more ALERTs:
\newif\ifwarn@lert % True if \warnalert{t}.
\newcommand\warnalert[1]{
  \@okfalse
  \StrDel{#1}{ }[\temp@s]
  \ifthenelse{\equal{\temp@s}{t}}{\@oktrue\warn@lerttrue}{}
  \ifthenelse{\equal{\temp@s}{f}}{\@oktrue}{}
  \if@ok\else
    \ClassWarningNoLine{novelette}{Bad \string\warnalert{choice}.^^J%
      Choose one letter: t f (true|false). Default f.}
  \fi
}
%%


%% Page icons (in header, but only after \mainmatter).
\newif\ifhead@foot
\def\pi@v{} \def\pi@r{}
%% Page icons (in header, but only after \mainmatter).
\def\pi@v{} \def\pi@r{}
\DeclareDocumentCommand\pageicon{O{}mO{}}{ % May be re-used.
  \StrDel{#2}{ }[\temp@s]
  \xdef\pi@v{\temp@s}\xdef\pi@r{\temp@s}
  \StrDel{#1#3}{ }[\temp@n]
  \StrLeft{\temp@n}{1}[\temp@n]
  \case@test{\temp@n}
  \c@se{v}{\xdef\pi@v{\temp@s}} % verso
  \c@se{l}{\xdef\pi@v{\temp@s}} % left
  \c@se{e}{\xdef\pi@v{\temp@s}} % even
  \c@se{r}{\xdef\pi@r{\temp@s}} % recto, right
  \c@se{o}{\xdef\pi@r{\temp@s}} % odd
}
\LetLtxMacro\pageicons\pageicon\relax
%%


%% ONLY PREAMBLE:
%% ----------------------------------------------------------------------------


%%
\let\margin\margins\relax % In case mis-spelled.
\@onlypreamble\trimsize
\@onlypreamble\margins
\@onlypreamble\margin
\@onlypreamble\sheetfeed
\@onlypreamble\typesize
\@onlypreamble\lines
\@onlypreamble\layout
\@onlypreamble\namestyle
\@onlypreamble\subnamestyle
\@onlypreamble\guides
\@onlypreamble\microtype
\@onlypreamble\myparindent
\@onlypreamble\coverimage
\@onlypreamble\covertrim
\@onlypreamble\warn@lert
%%



%%
\endinput
%%
%% End of file `novelette-settings.sty'.
