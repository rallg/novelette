%% This is file `novelette-settings.sty',
%% part of `novelette' document class.
%% Copyright 2023 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-settings.sty}%
[2023/10/26 v0.21 LaTeX file (Preamble settings).]
%%


%% These settings are defined in novelette.cls, for both interior and cover:
%% \trimsize is always required. It is the interior page `trim size'.
%% \title and \author are required, except in draft mode (interior only).
%% \intent declares Output Intent. Default SWOP in final mode, otherwise none.


%% SETTINGS THAT ARE ONLY USED FOR BOOK INTERIOR PAGES
%% ----------------------------------------------------------------------------


%% MODE
% When your writing and editing is done, set \mode{final}.
\newcommand\mode[1]{
  \ifcover@rt\else
    \StrDel{#1}{ }[\temp@s]
    \@okfalse
    \IfSubStr{:draft:shade:final:dev:}{:\temp@s:}{ % Mode dev, developer only.
      \@oktrue\xdef\@mode{\temp@s}
    }{}
    \if@ok\else
      \@error{Bad \string\mode{choice}.^^J%
        Choose one: draft shade final.^^J%
        Sets book interior mode. Default draft. Ignored by cover.^^J%
        If any error (such as this one) is generated during compile,^^J%
        then final mode will be automatically switched to draft.}
    \fi
  \fi
}
%%


%% TRIM SIZE
% The trim size is finished size of interior pages. For print-on-demand
% softcover, it is the same as the book size.
%   This setting is mandatory, whether processing interior or cover.
\newlength\trim@w \newlength\trim@h % No defaults. Fatal error if not set.
\newcommand\trimsize[1]{ % w=length,h=length. Must be h>=w.
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\trim@w{\temp@n}
    \StrBehind{\temp@s}{h=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\trim@h{\temp@n}
    \fi
  \fi
  \if@ok
    \ifthenelse{\dimtest{\trim@h}{<}{\trim@w}}{\@okfalse}{}
  \fi
  \if@ok
    \gdef\trim@size{#1}
  \else
    \fatal@error{Bad or missing \string\trimsize{w=W,h=H}.^^J%
      W and H must have units in|mm. Also, H>=W.^^J%
      You must set both of them. No default values.}
  \fi
}
%%


%% Intent sets PDF/X Output Intent.
\def\@intent{SWOP} % Default.
\newcommand\intent[1]{
  \StrSubstitute{#1}{FOGRA39L}{FOGRA39}[\temp@s]
  \IfSubStr{:none:SWOP:FOGRA39:JC200103:custom:}{:\temp@s:}{
    \xdef\@intent{\temp@s}
  }{
    \@error{Bad value for \string\intent{choice}.^^J%
      Choose one: none SWOP FOGRA39 JC200103 custom.^^J%
      Docs explain what the choices mean. Default SWOP.^^J%
      Do not use custom without expertise.^^J%
      If choice none, PDF will not declare PDF/X conformance.^J%
      Others declare PDF/X conformance with chosen Output Intent.}
  }
}
%%


%% Sheetfeed. (Normally not used.)
% Most print services require that the PDF page size be same as book trimsize.
% In a few cases (or for home printing of markup drafts) the book pages
% are floated to the middle of a standard office paper size, letter or A4.
\def\sheet@feed{trimsize} % Default.
\newcommand\sheetfeed[1]{
  \StrDel{#1}{ }[\temp@s]
  \IfSubStr{:trimsize:letter:a4:A4:}{:\temp@s:}{
    \ifthenelse{\equal{\temp@s}{a4}}{\def\temp@n{A4}}{\def\temp@n{\temp@s}}
    \xdef\sheet@feed{\temp@n}\@oktrue
  }{\@okfalse}
  \StrDel{\temp@s}{\sheet@feed}[\temp@s]
  \reject@nonempty{\temp@s}
  \if@ok\else
    \@error{Bad \string\sheetfeed{choice}.^^J%
      Choose only one: trimsize letter A4. Default trimsize.^^J%
      If unsure, do not use this setting (accept default).^^J%
      This setting is ignored when processing cover art.}
    \gdef\sheetfeed{trimsize}
  \fi
}
%%


%% Margins. (Excludes all printable material. Inside is at spine.)
\newlength\m@top \newlength\m@out \newlength\m@bot \newlength\m@ins
\newif\ifmargin@lert
\def\all@margins{t=13mm,o=13mm,b=13mm,i=16.2mm}
\setlength\m@top{13mm} \setlength\m@out{13mm} % Defaults. 16.2mm>.625in,
\setlength\m@bot{13mm} \setlength\m@ins{16.2mm} % 13mm>.5in, diff>.125in>3mm.
\newcommand\margins[1]{
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{t=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\m@top{\temp@n}
    \ifdimcomp{\m@top}{<}{.25in}{\margin@lerttrue}{}%
    \StrDel{\temp@s}{t=\temp@n,}[\temp@s]
    \StrBehind{\temp@s}{o=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\m@out{\temp@n}
      \ifdimcomp{\m@out}{<}{.25in}{\margin@lerttrue}{}%
      \StrDel{\temp@s}{o=\temp@n,}[\temp@s]
      \StrBehind{\temp@s}{b=}[\temp@n]
      \StrBefore{\temp@n}{,}[\temp@n]
      \check@length{\temp@n}
      \if@ok
        \global\deflength\m@bot{\temp@n}
        \ifdimcomp{\m@bot}{<}{.25in}{\margin@lerttrue}{}%
        \StrDel{\temp@s}{b=\temp@n,}[\temp@s]
        \StrBehind{\temp@s}{i=}[\temp@n]
        \StrBefore{\temp@n}{,}[\temp@n]
        \check@length{\temp@n}
        \if@ok
          \global\deflength\m@ins{\temp@n}
          \ifdimcomp{\m@ins}{<}{.375in}{\margin@lerttrue}{}%
          \StrDel{\temp@s}{i=\temp@n,}[\temp@s]
        \fi
      \fi
    \fi
  \fi
  \if@ok
    \setlength\temp@l{\m@out+3mm}
    \ifdimcomp{\m@ins}{<}{\temp@l}{\margin@lerttrue}{}%
    \gdef\all@margins{#1}
  \else
    \@error{Bad \string\margins{t=T,o=O,b=B,i=I}^^J%
      t->top, o->outside, b->bottom, i->inside (spine, with glue zone).^^J%
      T,O,B,I have units in|mm. You must set all four of them.^^J%
      Usually I is larger than O by at least 3mm or .125in.}
    \setlength\m@top{13mm} \setlength\m@out{13mm} % Restore defaults.
    \setlength\m@bot{13mm} \setlength\m@ins{16.2mm}
    \gdef\all@margins{t=13mm,o=13mm,b=13mm,i=16.2mm}
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \ifmargin@lert
    \typeout{ALERT: Unusual margins. Interior bleed is not supported.^^J%
      Nearly all P.O.D. require >=0.25in margins at top, outside, bottom,^^J%
      and minimum 0.375in at inside. For best appearance, inside should^^J%
      exceed outside by at least 3mm or 0.125in. Your settings disagree.^^J%
      Note that many P.O.D. require larger values than these.}
    \g@addto@macro\misc@lert{%
      \typeout{ALERT: Unusual margin settings. Too small? No glue area?}%
    }
  \fi
  \IfNadaTF{\temp@s}{}{\xdef\margin@cruft{\temp@s}\g@addto@macro\misc@lert{%
    \typeout{ALERT: Ignored unknown `\margin@cruft' in \string\margins.}}%
  }
}
%%


%% Typesize. (Main font size.)
% Default typesize is calculated, based on other factors.
\newcommand\typesize[1]{
  \check@length{#1}
  \if@ok
    \global\deflength\type@size{#1}
  \else
    \@error{Bad \string\typesize{size}.^^J%
      Size has units, pt|bp. Typically 11.0pt-12.0bp.^^J
      Decimal values are permitted (and are often best).^^J
      If unset, Novelette will calculate and use a likely value.}
  \fi
}
%%


%% Lines. (Lines per page, main text block, not including header|footer.)
% Default lines are calculated, based on other factors.
\newcommand\lines[1]{ % Integer lines per page, main text only.
  \IfInteger{#1}{
    \xdef\lines@pp{#1}
  }{
    \@error{Bad \string\lines{integer}^^J%
      Lines per page, main text block only (not header|footer).^^J%
      Value must be integer, typically 27-35.^^J
      If unset, Novelette will calculate and use a likely value.}
  }
}
%%


%% LAYOUT (header/footer properties).
% Format: \layout{scheme=I,hgap=H,fgap=F,scale=S,num=N}
% Any order. May omit some or all, for defaults.
\def\@scheme{2} \def\h@gap{.5} \def\f@gap{.5} \def\hf@scale{}
\let\pn@ital\relax \def\pn@feat{}
\DeclareDocumentCommand\layout{m}{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{hgap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\h@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{hgap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{fgap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\f@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{fgap=\temp@n,}[\temp@s]
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<.88}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\hf@scale{Scale=\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{scale=\temp@n,}[\temp@s]
  \StrSubstitute{\temp@s}{nums}{num}[\temp@s]
  \StrBehind{\temp@s}{num=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfSubStr{\temp@n}{i}{\let\pn@ital\ital\relax}{}
  \IfSubStr{\temp@n}{o}{\xdef\pn@feat{Numbers=OldStyle}}{}
  \StrDel{\temp@s}{num=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{scheme=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>7}=1}{\@okfalse}%
        {\xdef\@scheme{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{scheme=\temp@n,}[\temp@s]
  \if@ok\else
    \@error{Bad \string\setlayout{scheme=S,hgap=H,fgap=F,scale=S,num=N}.^^J%
      I->Integer 1-7. Selects header/footer scheme. See docs. Default 3.^^J%
      H->Decimal 0-1. Extra line space header/main text. Default .5.^^J%
      F->Decimal 0-1. Extra line space main text/footer. Default .5^^J%
      S->Decimal .88-1. Scale of head/foot text, vs. main. Default 1.^^J%
      N->o i oi. Page numerals onum, italic, both. Default regular lnum.}
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \xdef\layout@cruft{\temp@s}
  \IfNadaTF{\layout@cruft}{}{\g@addto@macro\misc@lert{%
    \typeout{ALERT: Ignored unknown `\layout@cruft' in \string\setlayout.}}%
  }
}
%%


%% Guides. (For vertical positioning reference, in shade mode.)
% Up to four guide pairs. This command is parsed in novelette-shading.sty.
% Format: \guides{A,B,C,D} where A,B,C,D are integer lines from top of main.
\newcommand\guides[1]{\gdef\@guides{#1}}
\guides{} % Default none.
%%


%% Microtype options. (Passes \micro@set as package option to microtype.)
% You may only change stretch and shrink.
\def\micro@set{config=novelette-microtype,verbose=silent, protrusion=true}
\def\micro@stretch{20} \def\micro@shrink{20}
\def\set@microtype{stretch=20,shrink=20} \def\setmicro@tail{ (Defaults)}
\DeclareDocumentCommand\micro@type@set{m}{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{stretch=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfInteger{\temp@n}{\xdef\micro@stretch{\temp@n}}{\@okfalse}
  }
  \StrDel{\temp@s}{stretch=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{shrink=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNadaTF{\temp@n}{}{
    \IfInteger{\temp@n}{\xdef\micro@shrink{\temp@n}}{\@okfalse}
  }
  \StrDel{\temp@s}{shrink=\temp@n,}[\temp@s]
  \StrDel{\temp@s}{,}[\temp@s]
  \if@ok
    \xdef\set@microtype{stretch=\micro@stretch,shrink=\micro@shrink}
    \gdef\setmicro@tail{}
  \else
    \@error{Bad setting in \string\microtype. Novelette limits the choices.^^J%
      You may set stretch=integer and/or shrink=integer. Nothing else.}
  \fi
  \IfNadaTF{\temp@s}{}{\xdef\micro@cruft{\temp@s}\g@addto@macro\misc@lert{%
    \typeout{ALERT: Unused `\micro@cruft' in \string\microtype.}}%
  }
}
\LetLtxMacro\microtype\micro@type@set\relax
%%


%% CHECK FEATURES
% Disallows some fontspec pseudo-features that are not appropriate.
\def\check@features#1#2{%
  \StrDel{#2}{ }[\temp@s]
  \@oktrue
  \IfSubStr{\temp@s}{Color=}{\@okfalse}{}
  \IfSubStr{\temp@s}{color=}{\@okfalse}{}
  \IfSubStr{\temp@s}{Colour=}{\@okfalse}{}
  \IfSubStr{\temp@s}{colour=}{\@okfalse}{}
  \IfSubStr{\temp@s}{Opacity=}{\@okfalse}{}
  \IfSubStr{\temp@s}{opacity=}{\@okfalse}{}
  \IfSubStr{\temp@s}{FakeBold=}{\@okfalse}{}
  \IfSubStr{\temp@s}{FakeSlant=}{\@okfalse}{}
  \StrSubstitute{\temp@s}{scale=}{Scale=}[\temp@s]
  \StrSubstitute{\temp@s}{Scale=}{ScaleAgain=}[\temp@s]
  \StrCount{\temp@s}{Scale}[\temp@d]
  \ifthenelse{\fpeval{\temp@d>1}=1}{\@okfalse}{}
  \StrBehind{\temp@s,}{ScaleAgain=}[\temp@s]
  \StrBefore{\temp@s}{,}[\temp@s]
  \IfDecimal{\temp@s}{
    \@reject{\temp@s<.75}
  }{\reject@nonempty{\temp@s}}
}
\def\bad@features#1{
  \@error{Bad features in \string\set#1.^^J%
    You cannot choose Color, Opacity, FakeBold, or FakeSlant features.^^J%
    If using Scale or ScaleAgain (only once), it must be >=.75.}
}
%%


%% FONTS.
% Novelette ships with Swainson font, designed for main text. It is vaguely
% similar to Garamond/Bembo/Caslon (but not a clone or reproduction).
% This font is automatically used for main text, with automatic variants
% for header/footer and footnotes. It cannot be changed.
%   Bold is never used in main text, headings, or footnotes of popular fiction.
% So instead of shipping bold fonts that would be ignored, the default setup
% duplicates Regular/Italic to Bold/BoldItalic, for Swainson.
%   Why require Swainson? It has metrics, character set, and OpenType
% features that are known to Novelette. This allows macro definitions that
% do not need to measure properties, or fork according to the font. 
%   Swainson has a limited character set. If you need the occasional extra
% character, you may manually request it from a fallback font. See below.
%   You do not set sans-serif (sffamily) or monospace (ttfamily). But since
% fontspec creates them, Novelette re-purposes these fonts. The sffamily is
% used for footnotes. The ttfamily is used for page header/footer. These fonts
% are not actually sans-serif or monospace. Does not matter. Novelette knows.
%   You may create 3 user-defined fonts, styleafont, stylebfont, stylecfont.
% They are automatically used by commands \stylea, \styleb, \stylec. Purpose is
% to allow artistic presentation in places such as the book title page,
% but you may use them for any purpose on any display page (nowhere else).
% If you do not create them, then requests for the fonts will simply deliver
% Swainson (with Alert).
%%


%% Do not use the standard fontspec settings:
\DeclareDocumentCommand\no@such@font{O{}mO{}}{
  \@error{\string\setmainfont, \string\setsansfont, and \string\setmonofont^^J%
    are not user settings in Novelette. See docs.}
}
\DeclareDocumentCommand\no@more@fonts{O{}mO{}}{
  \@error{You may not use \string\newfontfamily, or \string\newfontface.^^J%
    Novelette limits user fonts to \string\styleafont, \string\stylebfont,^^J%
    and \string\stylecfont. If not enough, place unusual text as images.}
}
\LetLtxMacro\setsansfont\no@such@font\relax
\LetLtxMacro\setmonofont\no@such@font\relax
\LetLtxMacro\newfontfamily\no@more@fonts\relax
\LetLtxMacro\newfontface\no@more@fonts\relax
%%


%% ENABLE FALLBACK FONT
% Swainson has the Latin-1 character set, plus many typographic characters.
% It does not have Eastern European, Greek, Cyrillic, other world languages,
% or dingbats. In other words, Swainson has what you need for popular fiction
% in its languages: English, French, German, Italian, Spanish, Catalan.
%   If you need the occasional extra character, it may be obtained from the
% fallback font, Libertinus Serif. But since most books will not need this,
% Novelette does not waste time looking for the font, or loading it, unless
% requested by \fallback{enabled} (or simply e) in Preamble.
%   See novelette-fonts.sty for more information.
\newif\iffallback@enabled
\def\fallback#1{
  \StrDel{#1}{ }[\temp@s]
  \IfBeginWith{\temp@s}{e}{\global\fallback@enabledtrue}{}
}
%%


%% STYLEAFONT, STYLEBFONT, STYLECFONT
\def\stylea@feat{}
\DeclareDocumentCommand\styleafont{O{}mO{}}{
  \xdef\stylea@name{#2}
  \IfNadaTF{#1#3}{}{
    \check@features{styleafont}{#1,#3}
    \if@ok
      \IfNadaTF{#1}{\def\temp@s{#3}}{
        \IfNadaTF{#3}{\def\temp@s{#1}}{\def\temp@s{#1,#3}}
      }
      \xdef\stylea@feat{\temp@s}
    \else
      \bad@features{styleafont}
    \fi
  }
}
%%
\def\styleb@feat{}
\DeclareDocumentCommand\stylebfont{O{}mO{}}{
  \xdef\styleb@name{#2}
  \IfNadaTF{#1#3}{}{
    \check@features{stylebfont}{#1,#3}
    \if@ok
      \IfNadaTF{#1}{\def\temp@s{#3}}{
        \IfNadaTF{#3}{\def\temp@s{#1}}{\def\temp@s{#1,#3}}
      }
      \xdef\styleb@feat{\temp@s}
    \else
      \bad@features{stylebfont}
    \fi
  }
}
%%
\def\stylec@feat{}
\DeclareDocumentCommand\stylecfont{O{}mO{}}{
  \xdef\stylec@name{#2}
  \IfNadaTF{#1#3}{}{
    \check@features{stylecfont}{#1,#3}
    \if@ok
      \IfNadaTF{#1}{\def\temp@s{#3}}{
        \IfNadaTF{#3}{\def\temp@s{#1}}{\def\temp@s{#1,#3}}
      }
      \xdef\stylec@feat{\temp@s}
    \else
      \bad@features{decofont}
    \fi
  }
}
%%


%% NAME STYLE
% Alignment, font scale for \name. Alignment may be locally changed.
\def\nn@align{c} \def\nn@scale{1.6} % Default.
\def\name@style{align=\nn@align,scale=\nn@scale}
\newcommand\namestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \ifthenelse{\equal{\temp@n}{}}{}{
    \IfSubStr{:l:c:r:o:i:}{:\temp@n:}{
      \xdef\nn@align{\temp@n}
    }{\@okfalse}
  }
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfDecimal{\temp@n}{
    \@reject{\temp@n<.75}
    \@reject{\temp@n>3}
  }{\reject@nonempty{\temp@n}}
  \if@ok
    \xdef\nn@scale{\temp@n}
  \else
    \@error{Bad value in \string\namestyle{align=A,scale=S}.^^J%
      A is one of c l r o i. Horizontal alignment. Default c.^^J%
      S is number >=1 and <=3. The namefont scale. Default 1.6.}
  \fi
}
%%


%% SUBNAME STYLE
% Alignment, font scale for \subname. Alignment may be locally changed.
\def\sn@align{c} \def\sn@scale{1.2} % Default.
\def\subname@style{align=\sn@align,scale=\sn@scale}
\newcommand\subnamestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \@oktrue
  \StrBehind{\temp@s}{align=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \ifthenelse{\equal{\temp@n}{}}{}{
    \IfSubStr{:l:c:r:o:i:}{:\temp@n:}{
      \xdef\sn@align{\temp@n}
    }{\@okfalse}
  }
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfDecimal{\temp@n}{
    \@reject{\temp@n<.75}
    \@reject{\temp@n>2}
  }{\reject@nonempty{\temp@n}}
  \if@ok
    \xdef\sn@scale{\temp@n}
  \else
    \@error{Bad value in \string\subnamestyle{align=A,scale=S}.^^J%
      A is one of c l r o i. Horizontal alignment. Default c.^^J%
      S is number >=.75 and <=3. The subnamefont scale. Default 1.2.}
  \fi
}
%%


%% LANGUAGE
% This does not interfere with TeX internal \languageN macro. 
\LetLtxMacro\orig@language\language\relax % Later restored.
\def\lang@option{} \def\lang@tail{}
\def\set@lang{english} \def\lang@hyph{english}
\def\log@lang{\string\language\space unset. Using default old-pattern english.}
\nonfrenchspacing \lefthyphenmin=2 \righthyphenmin=3
\DeclareDocumentCommand\set@language{O{}mO{}}{
  \StrDel{#2}{ }[\temp@s]
  \IfSubStr{:english:french:german:spanish:italian:catalan:}{:\temp@s:}{
    \@oktrue\xdef\set@lang{\temp@s}\xdef\lang@hyph{\temp@s}
  }{\@okfalse}
  \StrDel{#1#3}{ }[\temp@s]
  \ifthenelse{\equal{\set@lang}{english}}{
    \IfSubStr{:us:uk::}{:\temp@s:}{
      \xdef\lang@option{\temp@s}
      \ifthenelse{\equal{\temp@s}{us}}{\gdef\lang@hyph{usenglishmax}}{}
      \ifthenelse{\equal{\temp@s}{uk}}{\gdef\lang@hyph{ukenglish}}{}
    }{
      \@okfalse\xdef\lang@tail{(Unknown option [\temp@s] ignored.)}
    }
  }{}
  \ifthenelse{\equal{\set@lang}{french}}{
    \frenchspacing \righthyphenmin=2
    \IfSubStr{:fr:ch:ca:x::}{:\temp@s:}{
      \xdef\lang@option{\temp@s}
    }{
      \@okfalse\xdef\lang@tail{(Unknown option [\temp@s] ignored.)}
    }
  }{}
  \ifthenelse{\equal{\set@lang}{german}}{
    \frenchspacing \righthyphenmin=2
    \IfSubStr{:1901:1901x:1996:1996x:ch::}{:\temp@s:}{
      \xdef\lang@option{\temp@s}
      \ifthenelse{\equal{\temp@s}{1901}}{\gdef\lang@hyph{german}}{}
      \ifthenelse{\equal{\temp@s}{1996}}{\gdef\lang@hyph{ngerman}}{}
      \ifthenelse{\equal{\temp@s}{1901x}}{\gdef\lang@hyph{dehyph-x-german}}{}
      \ifthenelse{\equal{\temp@s}{1996x}}{\gdef\lang@hyph{dehyph-x-ngerman}}{}
      \ifthenelse{\equal{\temp@s}{ch}}{\gdef\lang@hyph{swissgerman}}{}
    }{
      \@okfalse\xdef\lang@tail{(Unknown option [\temp@s] ignored.)}
    }
  }{}
  \IfSubStr{:italian:spanish:catalan:}{:\set@lang:}{
    \nonfrenchspacing \righthyphenmin=2
    \ifthenelse{\equal{\temp@s}{}}{}{
      \@okfalse\xdef\lang@tail{(Unknown option [\temp@s] ignored.)}
    }
  }{}
  \if@ok
    \ifthenelse{\equal{\lang@option}{}}{
      \xdef\log@lang{\string\language{\set@lang}} \lang@tail
    }{
      \xdef\log@lang{\string\language[\lang@option]{\set@lang}} \lang@tail
    }
  \else
    \@error{Bad setting in \string\language[option]{language}.^^J%
      Choose language: english french german italian spanish catalan.^^J%
      Options for english: us uk. (Default empty, uses old patterns.)^^J%
      Options for french: fr ch ca x. (Punctuation spacing. Default fr.)^^J%
      Options for german: 1901 1901x 1996 1996x ch. (sz/ss. Default 1901.)^^J%
      No options for italian, spanish, catalan.}
  \fi
}
\LetLtxMacro\language\set@language\relax
%%


%% Optionally over-ride default 1.5em parindent:
\newcommand\myparindent[1]{\gdef\myown@parindent{#1}}
%%


%% Custom \intent:
\def\custom@cats{ % Because escape characters are different in TeX and XMP.
  \catcode`\#=12
  \catcode`\_=12
  \catcode`\~=12
  \catcode`\$=12
  \catcode`\%=12
  \catcode`\&=12
  \edef\@pctchar{\expandafter\@gobble\string\%}
  \let\%\@pctchar
  \edef\@hashchar{\expandafter\@gobble\string\#}
  \let\#\@hashchar
  \edef\@ampchar{\expandafter\@gobble\string\&amp;}
  \let\&\@ampchar
  \edef\@dollarchar{\expandafter\@gobble\string\$}
  \let\$\@dollarchar
  \edef\@underchar{\expandafter\@gobble\string\_}
  \let\_\@underchar
  \edef\@tildechar{\expandafter\@gobble\string\~}
  \let\~\@tildechar
}
\def\customOIidentifier#1{
  \begingroup\custom@cats\xdef\OIidentifier{#1}\endgroup
}
\def\customOIcondition#1{
  \begingroup\custom@cats\xdef\OIcondition{#1}\endgroup
}
\def\customOIinfo#1{
  \begingroup\custom@cats\xdef\OIinfo{#1}\endgroup
}
\def\customOIregistry#1{
  \begingroup\custom@cats\xdef\OIregistry{#1}\endgroup
}
%%



%% SETTINGS THAT ARE ONLY USED FOR COVER:
%% ----------------------------------------------------------------------------
%% Page size of PDF will be automatically set by measuring cover image size.


%% Image must be raster jpg, pre-processed by cmyk4nvt script.
\newcommand\coverimage[1]{
  \@oktrue
  \IfBeginWith{#1}{/}{\@okfalse}{}
  \IfSubStr{#1}{://}{\@okfalse}{}
  \IfBeginWith{#1}{..}{\@okfalse}{}
  \if@ok\else
    \fatal@error{Bad location for coverimage file.^^J%
      It may be same directory as main document,^^J%
      or in a subdirectory path, relative to main document.^^J%
      But you may not use an absolute path (beginning with / or ://)^^J%
      and you cannot use ../ to move up directory.}
  \fi
  \IfEndWith{#1}{.jpg}{}{
    \fatal@error{Cover image does not have `.jpg' file extension.}
  }
  \gdef\cover@image{#1}
}
%%


%% Cover Trim is finished cover size, after bleed has been removed.
\newlength\covertrim@w \newlength\covertrim@h
\newcommand\covertrim[1]{
  \StrSubstitute{#1,}{ }{}[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \StrBehind{\temp@s}{h=}[\temp@d]
    \StrBefore{\temp@d}{,}[\temp@d]
    \check@length{\temp@d}
  \fi
  \if@ok
    \gdef\cover@trim{#1}
    \global\deflength\covertrim@w{\temp@n}
    \global\deflength\covertrim@h{\temp@d}
  \else
    \fatal@error{Bad \string\covertrim{w=W,h=H}.^^J%
      W is width of trimmed cover, units in|mm|cm.^^J%
      H is height of trimmed cover, units in|mm|cm.^^J%
      The covertrim is the finished cover size,^^J%
      after surrounding bleed has been trimmed off.^^J%
      The finished size includes rear cover, spine, front cover.^^J%
      The full size of the input cover image is larger,^^J%
      because it must include surrounding bleed areas.}
 \fi
}
%%


%% IGNORE SETTINGS THAT DO NOT PERTAIN:
%% ----------------------------------------------------------------------------

\DeclareDocumentCommand\ignore@this@command{O{}mO{}}{} % Do-nothing.

%%
\ifcover@rt % Ignore interior-specific settings.
  \def\@mode{final} % Default.
  \def\mod@xmplabel{COVER } % Default.
  \def\sheetfeed#1{}
  \def\margins#1{}
  \def\typesize#1{}
  \def\lines#1{}
  \def\fallback#1{}
  \def\layout#1{}
  \def\guides#1{}
  \def\microtype#1{}
  \def\namestyle#1{}
  \def\subnamestyle#1{}
  \def\myparindent#1{}
  \LetLtxMacro\titlefont\ignore@this@command
  \LetLtxMacro\authorfont\ignore@this@command
  \LetLtxMacro\language\ignore@this@command
\else % Ignore cover-specific settings.
  \def\@mode{draft} % Default.
  \def\mod@xmplabel{DRAFT } % Default.
  \def\covertrim#1{}
  \def\coverimage#1{}
\fi
%%


%% Issue warning if one or more ALERTs:
\newif\ifwarn@lert % True if \warnalert{t}.
\newcommand\warnalert[1]{
  \@okfalse
  \StrDel{#1}{ }[\temp@s]
  \ifthenelse{\equal{\temp@s}{t}}{\@oktrue\warn@lerttrue}{}
  \ifthenelse{\equal{\temp@s}{f}}{\@oktrue}{}
  \if@ok\else
    \ClassWarningNoLine{novelette}{Bad \string\warnalert{choice}.^^J%
      Choose one letter: t f (true|false). Default f.}
  \fi
}
%%


%% ONLY PREAMBLE:
%% ----------------------------------------------------------------------------


%%
\let\margin\margins\relax % In case mis-spelled.
\@onlypreamble\trimsize
\@onlypreamble\margins
\@onlypreamble\margin
\@onlypreamble\sheetfeed
\@onlypreamble\typesize
\@onlypreamble\lines
\@onlypreamble\layout
\@onlypreamble\namestyle
\@onlypreamble\subnamestyle
\@onlypreamble\guides
\@onlypreamble\microtype
\@onlypreamble\myparindent
\@onlypreamble\coverimage
\@onlypreamble\covertrim
\@onlypreamble\warn@lert
%%



%%
\endinput
%%
%% End of file `novelette-settings.sty'.
