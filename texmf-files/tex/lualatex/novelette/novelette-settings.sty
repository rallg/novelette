%% This is file `novelette-settings.sty', part of `novelette' document class.
%% Copyright 2024 Robert Allgeyer.
%%
%% This file may be distributed and/or modified under the
%% conditions of the LaTeX Project Public License, version 1.3c.
%%
\ProvidesFile{novelette-settings.sty}%
[2024/03/17 v0.47 LaTeX file (Preamble settings).]
%%

%% This file is loaded for interior only.

%% SETTINGS
%    All settings are in this file, except \title, \author, in novelette.cls.
%  Novelette restricts your settings, so that you can rapidly get to writing
%  your book, instead of fooling around with settings.
%%

%% Mode (how the PDF is prepared).
%  Typesetting (paragraphs, pagination) is the same in all modes.
%  All modes, except final, label PDF metadata as not being final.
%  When your writing and editing is done, set \mode{final}.
%    draft -> Does not inspect images, shows overfull boxes.
%    shade -> Is draft, with margins and guides tinted gray.
%    fill -> Is draft, shade, with nonsense filler text at beginning.
%    typo -> Is draft, with typographic flaws inspected and highlighted.
%    typo* -> Is typo, with non-highlighted text changed to light gray.
%    final -> Inspects images, provides PDF/X unless requested otherwise.   
%    dev -> Is draft, with developer enhancements. Not for ordinary users.
%%
\def\@mode{draft} % Default.
\def\mode@tail{(default)}
\newcommand\mode[1]{
  \StrDel{#1}{ }[\temp@s]
  \@okfalse
  \IfSubStr{:draft:shade:fill:typo:typo*:final:dev:}{:\temp@s:}{
    \@oktrue\xdef\@mode{\temp@s} \gdef\mode@tail{}
  }{}
  \if@ok
    \IfSubStr{:shade:fill:dev:}{\@mode}{\global\add@shadetrue}{}
  \else
    \nvt@err{Bad setting for \noexpand\mode}%
      {Choose one mode: draft shade full typo typo* final.^^J%
       Sets book interior mode. Default draft. Ignored by cover.^^J%
       Both typo and typo* are typo mode, but with different highlights.^^J%
       If any error (such as this one) is generated during compile,^^J%
       then final mode will be automatically switched to draft.}%
  \fi
}
%%

%% Trim Size (finished interior page size).
%  This setting is mandatory.
%    Trim size is the finished size of interior pages. It is the same as the
%  book size. This is your decision, so Novelette does not provide a default.
%    Unlike standard LaTeX document classes, Novelette does not select
%  trim size from a list of papers (such as letterpaper, a4paper, etc.)
%  Instad, you provide the actual width and height, with units in|mm.
%    During manufacture, larger paper is fed through the printer. At the very
%  end, after rough-cut pages are bound into the rough-cut cover, the entire
%  book is "trimmed" to final size by a cutting machine. This is why books
%  manufactured using Perfect Print technology (typical of print-on-demand)
%  are so precisely aligned.
%%
\newlength\trim@w \newlength\trim@h % No defaults. Must be set.
\newcommand\trimsize[1]{ % w=length,h=length. Must be h>=w.
  \xdef\trim@size{#1}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{w=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\trim@w{\temp@n}
    \StrBehind{\temp@s}{h=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\trim@h{\temp@n}
    \fi
  \fi
  \if@ok
    \ifthenelse{\dimtest{\trim@h}{<}{\trim@w}}{\@okfalse}{}
  \fi
  \if@ok\else
    \fatal@err{Bad or missing \noexpand\trimsize.^^J%
     W and H must have units in|mm. Also, H>=W.^^J%
     You must set both of them. No default values.}%
  \fi
}
%%

%% Intent (PDF/X Output Intent)
%    Many print-on-demand services prefer (or require) PDF/X files. This is
%  a subset of PDF, requiring certain things, and prohibiting other things.
%  Novelette has built-in capability to produce PDF/X, and will do it, unless
%  you set \intent{none}.
%    Output Intent is declared in PDF metadata. It tells the printer that
%  the graphics designer prepared the PDF in a color-managed workflow, for the
%  color rendition of a specific printing technology. Then, if that is the
%  actual technology used, the printed result will match the designer's intent. 
%  But it does not force the printer to use that technology.
%    Output Intent is important for magazines, and other publications that
%  require accurate color. But your book interior does not use color, and the
%  print service will not be committed to any particular color rendition for
%  your book cover.
%    Although Output Intent is irrelevant for your purposes,
%  it must be declared in PDF/X, as part of the standard. It will be ignored.
%    In modes other than final, Novelette does not produce PDF/X, and does not
%  declare an Output Intent. In final mode, Novelette produces PDF/X unless
%  you set \intent{none}.
%    The default intent is SWOP, shorthand for "U.S. Web Coated (SWOP) v2",
%  also known as "CGATS TR 001". This widely-used in the USA.
%    Other choices are FOGRA (shorthand for "FOGRA39L"), typical for Europe,
%  and JC (shorthand for "JC200103"), typical for Japan.
%%
\def\@intent{SWOP} \def\intent@tail{(default)}
\newcommand\intent[1]{
  \StrSubstitute{#1}{FOGRA39L}{FOGRA39}[\temp@s]
  \IfSubStr{:none:SWOP:FOGRA39:JC200103:}{:\temp@s:}{
    \xdef\@intent{\temp@s} \gdef\intent@tail{}
  }{
    \nvt@err{Bad setting for \noexpand\intent}%
      {Choose one setting: none SWOP FOGRA39 JC200103.^^J%
       Docs explain what the choices mean. Default SWOP.^^J%
       If choice none, PDF will not declare PDF/X conformance.^J%
       Others declare PDF/X conformance with chosen Output Intent,
       but only in final mode.}%
  }
}
%%

%% Sheetfeed (when PDF page size differs from trimsize)
%    Important: Do not use this setting unless necessary. The default is same
%  as trimsize, which is almost always what you need.
%    PDF page size is what you see (unless cropped) in PDF reader software.
%  Trim size is the finished interior page size. Most print services require
%  them to be the same: what you see is what you get.
%    In a few cases, especially when working with a human editor, or printing
%  for yourself on a home printer, you may need to center the trim size
%  (horizontally and vertically) in a standard paper size. You may use
%  \sheetfeed{letter} or \sheetfeed{A4} for that purpose.
%    Whether or not you use \sheetfeed, the PDF metadata states the actual
%  trim size (and whether it is centered in a larger sheet).
%%
\def\sheet@feed{trimsize} \def\sheetfeed@tail{(default)}
\newcommand\sheetfeed[1]{
  \StrDel{#1}{ }[\temp@s]
  \IfSubStr{:trimsize:letter:a4:A4:}{:\temp@s:}{
    \xdef\sheet@feed{#1}\@oktrue
  }{\@okfalse}
  \StrDel{\temp@s}{\sheet@feed}[\temp@s]
  \ifthenelse{\equal{\temp@s}{}}{
    \ifthenelse{\equal{\sheet@feed}{trimsize}}{}{\gdef\sheetfeed@tail{}}
  }{
    \nvt@err{Bad setting \noexpand\sheetfeed}%
      {Choose only one sheetfeed: trimsize letter A4.^^J%
       Default trimsize. If unsure, do not set sheetfeed (accept default).}%
    \gdef\sheet@feed{trimsize}
    \gdef\sheetfeed@tail{(re-set to default, due to bad setting)}
  }
}
%%

%% Margins (excludes all printable material)
%    In Novelette, the four margins surround a rectangle, which is the entire
%  printable area. If you use header|footer, they appear within this rectangle,
%  not within a margin. There are no marginal notes.
%    Word processors (and some other LaTeX document classes) place material
%  in the margin areas. You cannot do that. So if you are required to have
%  margins of a certain size, be sure that your "margins" mean the same thing
%  as the required "margins".
%    There are four margins: top, outside, bottom, inside. The inside margin
%  includes a small area needed for binding glue. So if your page design
%  visually centers the text block at left and right, which is standard,
%  then the inside margin must be set slightly larger than the outside margin.
%    Many (not all) print-on-demand services require minimum margins of
%  0.5in (US) or 13mm (Europe), plus 0.125in (US) or 3mm (Europe) at inside.
%  The default margins meet the larger of these, all around.
%    Print-on-demand services generally reject artistic page layout, with
%  enlarged margin at outside or bottom. The copies are printed in various
%  places by various machines, and handled by persons who know nothing about
%  your design intent. Artistic placement will be seen as mis-aligned.
%    The actual margins are slightly larger than your settings, to allow for
%  protrusion. But in shade mode, the visible gray areas are what you set for
%  the margins.
%%
\newlength\m@top \newlength\m@out \newlength\m@bot \newlength\m@ins
\newif\ifsent@marginmessage % True if \margin@message was already sent.
\def\margin@message{
  \ifsent@marginmessage\else
    \@lert{Unusual margin settings. Too small? No glue area?}
  \fi
  \global\sent@marginmessagetrue
}
\setlength\m@top{13mm} \setlength\m@out{13mm} % Defaults. 16.2mm>.625in,
\setlength\m@bot{13mm} \setlength\m@ins{16.2mm} % 13mm>.5in, diff>.125in>3mm.
\def\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm} \def\margin@tail{(defaults)}
\newcommand\margins[1]{
  \xdef\margin@setting{#1} \gdef\margin@tail{}
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{t=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \global\deflength\m@top{\temp@n}
    \ifdimcomp{\m@top}{<}{.25in}{\margin@message}{}%
    \StrDel{\temp@s}{t=\temp@n,}[\temp@s]
    \StrBehind{\temp@s}{o=}[\temp@n]
    \StrBefore{\temp@n}{,}[\temp@n]
    \check@length{\temp@n}
    \if@ok
      \global\deflength\m@out{\temp@n}
      \ifdimcomp{\m@out}{<}{.25in}{\margin@message}{}%
      \StrDel{\temp@s}{o=\temp@n,}[\temp@s]
      \StrBehind{\temp@s}{b=}[\temp@n]
      \StrBefore{\temp@n}{,}[\temp@n]
      \check@length{\temp@n}
      \if@ok
        \global\deflength\m@bot{\temp@n}
        \ifdimcomp{\m@bot}{<}{.25in}{\margin@message}{}%
        \StrDel{\temp@s}{b=\temp@n,}[\temp@s]
        \StrBehind{\temp@s}{i=}[\temp@n]
        \StrBefore{\temp@n}{,}[\temp@n]
        \check@length{\temp@n}
        \if@ok
          \global\deflength\m@ins{\temp@n}
          \ifdimcomp{\m@ins}{<}{.375in}{\margin@message}{}%
          \StrDel{\temp@s}{i=\temp@n,}[\temp@s]
        \fi
      \fi
    \fi
  \fi
  \if@ok
    \setlength\temp@l{\m@out+3mm}
    \ifdimcomp{\m@ins}{<}{\temp@l}{\margin@message}{}%
  \else
    \nvt@err{Bad setting for \noexpand\margins}%
      {Format: \noexpand\margins{t=T,o=O,b=B,i=I}^^J%
       t->top, o->outside, b->bottom, i->inside (spine, with glue zone).^^J%
       T,O,B,I have units in|mm. If you set any, You must set all four.^^J%
       Usually I is larger than O by at least 3mm or .125in.}%
    \setlength\m@top{13mm} \setlength\m@out{13mm} % Restore defaults.
    \setlength\m@bot{13mm} \setlength\m@ins{16.2mm}
    \gdef\margin@setting{t=13mm,o=13mm,b=13mm,i=16.2mm}
    \gdef\margin@tail{(re-set to defaults)}
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNada{\temp@s}{}{
    \xdef\margin@cruft{\temp@s}
    \@lert{Ignored unknown `\margin@cruft' in \string\margins.}
  }
}
%%


%% Layout (page design).
%    Novelette has its own methods for interior page design, because
%  popular fiction only needs a few possibilities.
%    There are 4 possible layout schemes, numbered 1-4 (see documentation).
%  Each determines whether there is a header and/or footer, and (if header)
%  its design. For developer use, scheme 0 omits both header and footer.
%    You may tweak the distance (gap) from header (if used) to main text,
%  and from main text to footer (if used).
%    Format: \layout{scheme=S,gap=G,lines=L,em=M,font=F}
%      S -> Integer 1-4, also 0 for dev. Default 2.
%      G -> Number 0.5-1. Default 1.
%      L -> Integer lines in main textblock. Default is calculated, typ 27-37.
%      M -> With units pt or bp. Default calculated, typ 11.4-11.7pt.
%      F -> main,light,dark. Selects header font. Default main.^^J%
%      Any order. May omit some or all, for defaults.
%%
\def\layout@setting{scheme=2,gap=1} % em is calculated.
\def\@scheme{2} \def\hf@gap{1} \def\hf@font{main} \def\layout@tail{}
\newlength\type@size % Main font size.
\def\em@perline{0}
\DeclareDocumentCommand\layout{m}{
  \StrDel{#1,}{ }[\temp@s]
  \StrBehind{\temp@s}{em=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \check@length{\temp@n}
  \if@ok
    \ifdimcomp{\temp@n}{<}{8bp}{
    \nvt@err{Requested \noexpand\layout{em=\temp@n} is out of range}%
      {Main em size must be at least 8bp (8.03pt).^^J%
       Practical range is 10.5pt-13pt. Typical value is 11.4pt-11.7pt.^^J%
       If in doubt, let Novelette choose the value for you.}%
    }{
       \global\deflength\type@size{\temp@n}
    }
  \fi
  \IfNada{\temp@n}{\@oktrue}{}
  \StrDel{\temp@s}{em=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{gap=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfDecimal{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0.5}=1\OR\fpeval{\temp@n>1}=1}{\@okfalse}%
        {\xdef\hf@gap{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{gap=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{font=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{%
    \IfSubStr{:main:light:dark:}{:\temp@n:}{%
      {\xdef\hf@font{\temp@n}}%
    }{\@okfalse}
  }
  \StrDel{\temp@s}{font=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{scheme=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<0}=1\OR\fpeval{\temp@n>4}=1}{\@okfalse}%
        {\xdef\@scheme{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{scheme=\temp@n,}[\temp@s]
  \StrBehind{\temp@s}{lines=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \IfNada{\temp@n}{}{
    \IfInteger{\temp@n}{
      \ifthenelse{\fpeval{\temp@n<12}=1\OR\fpeval{\temp@n>50}=1}{\@okfalse}%
        {\xdef\lines@pp{\temp@n}}
    }{\@okfalse}
  }
  \StrDel{\temp@s}{lines=\temp@n,}[\temp@s]
  \if@ok\else
    \nvt@err{Bad setting \notexpand\layout{setting}}%
      {Format: \layout{scheme=S,gap=G,lines=L,em=M,font=F}^^J%
       S -> Integer 1-4. Default 2.^^J%
       G -> Number 0.5-1. Default 1.^^J%
       L -> Integer lines in main text. Default is calculated, typ 27-37.^^J%
       M -> With units pt or bp. Default calculated, typ 11.4-11.7pt.^^J%
       F -> main,light,dark. Selects header font. Default main.^^J%
       \space\space\space\space\space F does not change font of main text.^^J%
       Any order. May omit some or all, for defaults.}%
  \fi
  \StrDel{\temp@s}{,}[\temp@s]
  \IfNada{\temp@s}{}{
    \xdef\layout@cruft{\temp@s}
    \@lert{Ignored unknown `\layout@cruft' in \string\layout.}
  }
}
%%

%% Guides (for vertical positioning reference, in shade mode)
%    In \mode{shade} or \mode{fill}, margins appear gray. If you set guides,
%  they appear as light gray lines across the textblock, on opening pages
%  and wherever requested by \showguides.
%    This may be useful when you wish to ensure that something appears at
%  a specific vertical position. For example, when you begin chapters with
%  the opening environment, it does not force the start of main text to
%  any particular line. You must do that by manually adding blank lines.
%  A guide pair can mark where the first of line of main text should be.
%    You may set up to 4 guides. Each is an integer number of lines, starting
%  at the top of the main text block (whether or not anything appears there).
%    Guides do not force anything. They are only visual references.
%  Format: \guides{A,B,C,D} where A,B,C,D are integer lines from top of main.
%%
\def\@guides{} \def\guides@tail{(no guides)}
\newcommand\guides[1]{
  \gdef\@guides{#1}\gdef\guides@tail{(only displayed in shade mode)}
}
%%

%% Fonts (you cannot set them; this is merely informative)
%    Novelette ships with Swainson font, designed for main text. It is vaguely
%  similar to Garamond/Bembo/Caslon (but not a clone or reproduction).
%  This font is automatically used for main text, with automatic variants
%  for header/footer and footnotes. It cannot be changed.
%    Bold is never used in main text, heading, or footnotes of popular fiction.
%  So instead of shipping bold fonts that would be ignored, Swainson "Bold"
%  is not bold, and "BoldItalic" is neither bold nor italic. Instead, these
%  files have charaters designed for different page header styles. Cheating!
%    Why require Swainson? It has metrics, character set, and OpenType
%  features that are known to Novelette. This allows macro definitions that
%  do not need to measure properties, or fork according to the font.
%    Swainson has a limited character set. If you need the occasional extra
%  character, you may manually request it from Libertinus Serif, using \alt.
%    You do not set sans-serif (sffamily) or monospace (ttfamily). But since
%  fontspec creates them, Novelette re-purposes these fonts. The sffamily is
%  Swainson (not actually sans), tweaked for use in header/footer.
%  The ttfamily (not actually monospace) is Swainson, tweaked for use in
%  footnotes and smalltext.
%%
\DeclareDocumentCommand\no@such@font{O{}mO{}}{%
  \nvt@err{Cannot use fontspec commands to choose or modify fonts}%
    {Although Novelette uses `fontspec' to define fonts, you may not use^^J%
     \noexpand\fontspec, \noexpand\setmainfont, \noexpand\newfontfamily,^^J%
     or any other `fontspec' commands for fonts and features. They are all^^J%
     pre-defined within Novelette. Why? See novelette docs for explanation.}
}
\LetLtxMacro\fontspec\no@such@font\relax
\LetLtxMacro\setmainfont\no@such@font\relax
\LetLtxMacro\setsansfont\no@such@font\relax
\LetLtxMacro\setmonofont\no@such@font\relax
\LetLtxMacro\setmathrm\no@such@font\relax
\LetLtxMacro\setboldmathrm\no@such@font\relax
\LetLtxMacro\setmathsf\no@such@font\relax
\LetLtxMacro\setmathtt\no@such@font\relax
\LetLtxMacro\setromanfont\no@such@font\relax
\LetLtxMacro\newfontfamily\no@such@font\relax
\LetLtxMacro\renewfontfamily\no@such@font\relax
\LetLtxMacro\setfontfamily\no@such@font\relax
\LetLtxMacro\providefontfamily\no@such@font\relax
\LetLtxMacro\newfontface\no@such@font\relax
\LetLtxMacro\renewfontface\no@such@font\relax
\LetLtxMacro\setfontface\no@such@font\relax
\LetLtxMacro\providefontface\no@such@font\relax
\LetLtxMacro\defaultfontfeatures\no@such@font\relax
\LetLtxMacro\addfontfeatures\no@such@font\relax
\LetLtxMacro\addfontfeature\no@such@font\relax
\LetLtxMacro\newfontfeature\no@such@font\relax
\LetLtxMacro\newopentypefeature\no@such@font\relax
\LetLtxMacro\aliasfontfeature\no@such@font\relax
\LetLtxMacro\newfontscript\no@such@font\relax
\LetLtxMacro\newfontlanguage\no@such@font\relax
%%

%% Enable (allows something that otherwise is not built-in). Developer use.
\newcommand\enable[1]{
  \StrDel{#1,}{ }[\temp@s]
  \IfSubStr{\temp@s}{alt,}{\global\need@libertinustrue}{}
  \IfSubStr{\temp@s}{lvdebug,}{\global\lvdebug@enabledtrue}{}
}
%%

%% Header text (if layout has header).
\newcommand\rectohead[1]{\gdef\recto@head{#1}}
\newcommand\versohead[1]{\gdef\verso@head{#1}}
%%


%%
\def\check@fonts{
  \StrBehind{\temp@s}{font=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \nvt@casetest{\temp@n}
  \nvt@case{}{\gdef\temp@d{}}
  \nvt@case{main}{\gdef\temp@d{}}
  \nvt@case{light}{\gdef\temp@d{light}}
  \nvt@case{dark}{\gdef\temp@d{dark}}
  \ifnvt@casematch\else\@okfalse\gdef\temp@d{}\fi
  \StrDel{\temp@s}{font=\temp@n,}[\temp@s]
}
%%

%%
\def\check@align{
  \StrBehind{\temp@s}{align=}[\temp@d]
  \StrBefore{\temp@d}{,}[\temp@d]
  \IfSubStr{::c:l:r:o:i:}{:\temp@d:}{
    \StrDel{\temp@s}{align=\temp@d,}[\temp@s]
  }{\@okfalse}
}
%%

%%
\def\check@scale{
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \nvt@casematchtrue
  \IfDecimal{\temp@n}{
    \nvt@compare{\temp@n<.75}{\nvt@casematchfalse}{}
    \nvt@compare{\temp@n>6}{\nvt@casematchfalse}{}
  }{
    \nvt@casematchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifnvt@casematch\edef\temp@d{\temp@n}\else\def\temp@d{1}\fi
}
%%

%%
\def\bad@style#1{ % command name.
    \nvt@err{Bad setting in \string\#1}%
      {Format: {align=A,scale=S,font=F}^^J%
       You may set one or more of them. Default used for anything not set.^^J%
       A is one of c l r o i. Horizontal alignment. Default c.^^J%
       S is number >=1. Scale. Default 1.^^J%
       F is one of main,light,dark. Font. Default main.}%
}
%%

%% Name Style (typically used for chapter titles)
%    In document body, within opening or display environements only,
%  \name{text} writes its text according to \namestyle setting. This provides
%  a uniform appearance for each instance of \name.
%    Format: \namestyle{align=A,scale=S,font=F}
%      where A = l r c o i, default c. 1<=S<=6, default 1.67.
%      F is one of main,light,dark. Default main.
%%
\def\nn@scale{1.67} \def\nn@lf{main}
\let\nn@font\relax \def\nn@align{c}
\def\name@style{align=\nn@align,scale=\nn@scale,font=\nn@lf}
\newcommand\namestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@fonts
  \ifthenelse{\equal{\temp@d}{light}}{\let\nn@font\f@light\gdef\nn@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\let\nn@font\f@dark\gdef\nn@lf{dark}}{}
  \check@align
  \if@ok\xdef\nn@align{\temp@d}\fi
  \check@scale
  \if@ok\xdef\nn@scale{\temp@d}\fi
  \if@ok\else\bad@style{namestyle}\fi
}
%%

%% Subname Style (typically used for chapter subtitles)
%    In document body, within opening or display environements only,
%  \subname{text} writes its text according to \subnamestyle setting.
%  This provides a uniform appearance for each instance of \subname.
%    Format: \subnamestyle{align=A,scale=S,font=F}
%      where A = l r c o i, default c. 1<=S<=2, default 1.15.
%      F is one of main,light,dark. Default main.
%%
\def\sn@scale{1.15} \def\sn@lf{main}
\let\sn@font\relax \def\sn@align{c}
\def\subname@style{align=\sn@align,scale=\sn@scale,font=\sn@lf}
\newcommand\subnamestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@fonts
  \ifthenelse{\equal{\temp@d}{light}}{\let\sn@font\f@light\gdef\sn@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\let\sn@font\f@dark\gdef\sn@lf{dark}}{}
  \check@align
  \if@ok\xdef\sn@align{\temp@d}\fi
  \check@scale
  \if@ok\xdef\sn@scale{\temp@d}\fi
  \if@ok\else\bad@style{subnamestyle}\fi
}
%%

%% Scene Style (chapter scenes, when labeled by text)
%    Novelette provides several methods for separating scenes within chapters.
%  One of them is \scene{title of scene}. Setting \scenestyle set a uniform
%  appearance for each such \scene. It does not affect other \scene methods.
%%
\def\sc@scale{1.16} \def\sc@align{c} \def\sc@lf{main} \let\sc@font\relax
\def\scene@style{align=\sc@align,scale=\sc@scale,font=\sc@lf}
\newcommand\scenestyle[1]{
  \StrDel{#1,}{ }[\temp@s]
  \@oktrue
  \check@fonts
  \ifthenelse{\equal{\temp@d}{light}}{\gdef\sc@lf{light}}{}
  \ifthenelse{\equal{\temp@d}{dark}}{\gdef\sc@lf{dark}}{}
  \check@align
  \if@ok\xdef\sc@align{\temp@d}\fi
  \StrSubstitute{\temp@s}{Scale}{scale}[\temp@s]
  \StrBehind{\temp@s}{scale=}[\temp@n]
  \StrBefore{\temp@n}{,}[\temp@n]
  \nvt@casematchtrue
  \IfDecimal{\temp@n}{
    \nvt@compare{\temp@n<1}{\nvt@casematchfalse}{}
    \nvt@compare{\temp@n>1.25}{\nvt@casematchfalse}{}
  }{
    \nvt@casematchfalse
    \ifthenelse{\equal{\temp@n}{}}{}{\@okfalse}
  }
  \ifnvt@casematch
    \xdef\sc@scale{\temp@n}
  \else
    \@okfalse
  \fi
  \if@ok\else%
    \nvt@err{Bad setting in \noexpand\scenestyle}%
      {Format: \noexpand\scenestyle{align=A,scale=S,font=F}^^J%
       You may set one or more of them. Default used for anything not set.^^J%
       A is one of c l r o i. Horizontal alignment. Default c.^^J%
       S is number >=1 and <=1.25. Scale. Default 1.16^^J%
       F is one of main light dark. Font. Default main.}%
  \fi
}
%%

%% Language (hyphenation, also French punctuation)
%    Most LaTeX document classes use either package babel or polyglossia,
%  to automate language-specific features such as date/time format, etc.
%    Novelette does not automate those things. Need the time? Type it yourself.
%  Need chapter numbers? Type them yourself.
%    Setting \language[option]{languageName} chooses hyphenation patterns
%  for the languageName. They are the same patterns that would be used by
%  babel or polyglossia, but without using either of those packages.
%    In the case of German or English, the option selects a hyphenation
%  variant, based on spelling. In the case of French, the option selects how
%  punctuation spacing will be applied.
%    The default \language{english} has the advatnage that all LaTeX systems
%  have it. But if your language is actually English, use [us] or [uk] option
%  for better results.
%    In all cases, your system must have the hyphenation patterns for your
%  language. It probably does. If necessary, install `hyphen-L' where L
%  is the chosen language. If German, also install `dehyph-expl'.
%%
\LetLtxMacro\orig@language\language\relax % Later restored.
\def\lang@option{} \def\lang@tail{}
\def\set@lang{english} \def\lang@hyph{english}
\frenchspacing \lefthyphenmin=2 \righthyphenmin=2
\DeclareDocumentCommand\set@language{O{}mO{}}{
  \StrDel{#2}{ }[\temp@s]
  \IfSubStr{:english:french:german:spanish:italian:catalan:}{:\temp@s:}{
    \@oktrue\xdef\set@lang{\temp@s}\xdef\lang@hyph{\temp@s}
  }{\@okfalse}
  \StrDel{#1#3}{ }[\temp@n]
  \nvt@casetest{[\temp@n]}
  \ifthenelse{\equal{\set@lang}{english}}{
    \nonfrenchspacing \righthyphenmin=3
    \nvt@case{[]}{\gdef\lang@tail{(option [us] or [uk] is better)}}
    \nvt@case{[us]}{\gdef\lang@hyph{usenglishmax}}
    \nvt@case{[uk]}{\gdef\lang@hyph{ukenglish}}
    \ifnvt@casematch\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \ifthenelse{\equal{\set@lang}{french}}{
    \gdef\lang@hyph{french}
    \IfSubStr{:[fr]:[ch]:[ca]:[x]:[]:}{:[\temp@n]:}{}{
      \xdef\lang@tail{(unknown [\temp@n] ignored)}
    }
  }{}
  \ifthenelse{\equal{\set@lang}{german}}{
    \nvt@case{[]}{\gdef\lang@hyph{german}\gdef\lang@tail{(default 1901 spelling)}}
    \nvt@case{[1901]}{\gdef\lang@hyph{german}}
    \nvt@case{[1996]}{\gdef\lang@hyph{ngerman}}
    \nvt@case{[1901x]}{\gdef\lang@hyph{dehyph-x-german}}
    \nvt@case{[1996x]}{\gdef\lang@hyph{dehyph-x-ngerman}}
    \nvt@case{[ch]}{\gdef\lang@hyph{swissgerman}}
    \ifnvt@casematch\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfSubStr{:italian:spanish:catalan:}{:\set@lang:}{
    \xdef\lang@hyph{\set@lang}
    \nonfrenchspacing
    \nvt@case{[]}{}
    \ifnvt@casematch\else\xdef\lang@tail{(unknown [\temp@n] ignored)}\fi
  }{}
  \IfNada{\temp@n}{}{\xdef\lang@option{[\temp@n]}}
  \if@ok\else
    \nvt@err{Bad setting in \noexpand\language}%
      {Languages: english french german italian spanish catalan.^^J%
       Options for english: us uk. (Default empty, but better with option.)^^J%
       Options for french: fr ch ca x. (Punctuation spacing. Default fr.)^^J%
       Options for german: 1901 1901x 1996 1996x ch. (ß/ss. Default 1901.)^^J%
       No options for italian, spanish, catalan.}%
  \fi
  \LetLtxMacro\language\no@optsetting\relax
}
\LetLtxMacro\language\set@language\relax
%%

%% Typography Flaws
%  These are parsed by lua.
%  Required format, with the quotes: "space separated character string"
%  The setting ensures that user input is adjusted to this format.
\newtoks\typo@single \newtoks\typo@double \newtoks\typo@doublest
\def\typo@single{""} \def\typo@double{""} \def\typo@doublest{""}
\DeclareDocumentCommand\onechartypo{sm}{ % Star is disregarded.
  \xdef\temp@s{#2} % So \'A becomes one Unicode character, etc.
  \StrDel{\temp@s}{"}[\temp@s]
  \StrDel{\temp@s}{'}[\temp@s]
  \StrSubstitute{\temp@s}{,}{ }[\temp@s]
  \xdef\typo@single{"\temp@s"}
}
\DeclareDocumentCommand\twochartypo{sm}{ % Star less urgent.
  \IfBooleanTF{#1}{
    \xdef\temp@s{#2}
    \StrDel{\temp@s}{"}[\temp@s]
    \StrDel{\temp@s}{'}[\temp@s]
    \StrSubstitute{\temp@s}{,}{ }[\temp@s]
    \xdef\typo@doublest{"\temp@s"}
  }{
    \xdef\temp@s{#2}
    \StrDel{\temp@s}{"}[\temp@s]
    \StrDel{\temp@s}{'}[\temp@s]
    \StrSubstitute{\temp@s}{,}{ }[\temp@s]
    \xdef\typo@double{"\temp@s"}
  }
}
\LetLtxMacro\twocharstypo\twochartypo\relax
%%

%% Paragraph Indent
%    Novelette automatically sets paragraph indent at 1em. You may set it to
%  a larger (not smaller) value. Best if expressed in em units.
%%
\newcommand\myparindent[1]{\gdef\myown@parindent{#1}}
%%

%% Uppercase Roman in frontmatter.
\newcommand\myroman[1]{%
  \IfBeginWith{#1}{R}{\gdef\my@roman{R}}{}
  \IfBeginWith{#1}{I}{\gdef\my@roman{R}}{}
}
%%

%%% Page icons (ignored unless scheme is 3 or 4).
%   Layout schemes 3 and 4 allow page icons, which are little images that
% appear in page headers. Fashionable in non-fiction, but rare in fiction.
%   If you use them, page icons can only appear following \mainmatter.
% Once set, they may not be changed (but they may disappear).
\def\pi@v{} \def\pi@r{}
\def\pi@v{} \def\pi@r{}
\DeclareDocumentCommand\pageicon{O{}mO{}}{ % May be re-used.
  \StrDel{#2}{ }[\temp@s]
  \xdef\pi@v{\temp@s}\xdef\pi@r{\temp@s}
  \StrDel{#1#3}{ }[\temp@n]
  \StrLeft{\temp@n}{1}[\temp@n]
  \nvt@casetest{\temp@n}
  \nvt@case{v}{\xdef\pi@v{\temp@s}} % verso
  \nvt@case{l}{\xdef\pi@v{\temp@s}} % left
  \nvt@case{e}{\xdef\pi@v{\temp@s}} % even
  \nvt@case{r}{\xdef\pi@r{\temp@s}} % recto, right
  \nvt@case{o}{\xdef\pi@r{\temp@s}} % odd
  \ifnvt@casematch\else
    \nvt@err{Bad option for \noexpand\pageicon}%
     {Use \noexpand\pageicon[P]{filename.png} where P is one of v l e r o.}%
  \fi
}
\LetLtxMacro\pageicons\pageicon\relax
%%

%% Revision
\def\doc@rev{1}
\newcommand\rev[1]{\xdef\doc@rev{#1}}
%%

%% Settings that may only be used in Preamble:
\let\margin\margins\relax % In case mis-spelled.
\@onlypreamble\rev
\@onlypreamble\fontspec
\@onlypreamble\setmainfont
\@onlypreamble\setsansfont
\@onlypreamble\setmonofont
\@onlypreamble\setmathrm
\@onlypreamble\setboldmathrm
\@onlypreamble\setmathsf
\@onlypreamble\setmathtt
\@onlypreamble\setromanfont
\@onlypreamble\newfontfamily
\@onlypreamble\renewfontfamily
\@onlypreamble\setfontfamily
\@onlypreamble\providefontfamily
\@onlypreamble\newfontface
\@onlypreamble\renewfontface
\@onlypreamble\setfontface
\@onlypreamble\providefontface
\@onlypreamble\defaultfontfeatures
%\@onlypreamble\addfontfeatures
%\@onlypreamble\addfontfeature
%\@onlypreamble\newfontfeature
%\@onlypreamble\newopentypefeature
%\@onlypreamble\aliasfontfeature
\@onlypreamble\newfontscript
\@onlypreamble\newfontlanguage
\@onlypreamble\trimsize
\@onlypreamble\margins
\@onlypreamble\margin
\@onlypreamble\sheetfeed
\@onlypreamble\layout
\@onlypreamble\namestyle
\@onlypreamble\subnamestyle
\@onlypreamble\guides
\@onlypreamble\enable
\@onlypreamble\versohead
\@onlypreamble\rectohead
\@onlypreamble\pageicon
\@onlypreamble\pageicons
\@onlypreamble\coverimage
\@onlypreamble\covertrim
%%


%%
\endinput
%%
%% End of file `novelette-settings.sty'.
