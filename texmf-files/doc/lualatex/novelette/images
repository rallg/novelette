
INTERIOR IMAGES AND ICONS

This discusses images used in the book interior.
Cover artwork is discussed elsewhere.

Interior images may be real or fake. In the early stages of writing,
you may use fake images as placeholders. They are gray rectangles that
occupy an integer number of lines high. They will be positioned the same
way as if they were real. Using fake images speeds up compiling,
because there are no image files to locate and open.

A fake image uses this command format:

\image[position]{integer}[label]

The position options are the same as for real images (described below).
The integer is the number of text lines displaced by the fake image.
The label may be omitted. If you use a label, it is maximum
24 text characters. When the fake image is placed, within its rectangle
you will see the label written, so you know which
rectangle corresponds to which command. The label usually has
no relationship to the subsequent real image file name. It is merely for
your convenience.

Fake images may only be used in draft or shade mode. They allow you to
"write now, do graphics later".

A real image uses one of these command formats:

\image[position]{filename.png}
\image[position]{path/to/filename.png}

Notice that path/to does not begin with slash, because absolute paths are
not allowed. It does not begin with ../ to move up a directory, because
any image must either be in the same directory as the main document,
or in a subdirectory relative to the main document. This restriction reduces
the possibility that you will fail to move the images, if you move the
document.

If you are using subfiles, image paths are relative to the main document,
not relative to the subfile.

In draft or shade mode, any real png image will be placed in the PDF, even if
the image could not be placed in final mode.

In final mode, the png image will be inspected for conformance.
It must be flattened monochrome, 1-bit per pixel black/white,
600 pixels/inch, without private metadata or color profile.
Use your graphics program to do as much of that as you can.
Then, you must process the image with "mono4nvt", a BASH script that
uses ImageMagick. That creates a new image, with a coded file name.
If Novelette sees that the code is correct, it will allow the image
in final mode. But without the code, or incorrect code, the image
will not be allowed.

To ensure that real images displace the same number of text lines
as the fake placeholders, look near the end of the log file.
It provides details of the allowable pixel sizes.


IMAGE POSITION

The optional [position] is one or two letters, determining horizontal and
vertical placement.
	One of: clroi (center, left, right, outside, inside).
	One of: hbtpn (float here/top, bottom, top, page, nofloat).
If you do not provide the horizontal alignment, default c. If you do not
provide the vertical placement, default h.
	If you provide redundant or conflicting position codes, Novelette
does not generate a warning or error. Instead, it will guess your meaning
according to priorites. A fake image label will show you what code
was actually used. If the image was not positioned as you expected,
see how the actual code differed from what you wrote.
	You do not need to write ht. When you choose h, but it cannot
be done, then t is automatically used as alternate position.
	If you choose n, and the image is too close to the bottom of
its page, then it moves to the following top, leaving blank lines behind.
However, n is the only vertical position allowed on display pages,
or within the opening environment. Any request for a different vertical
position will be ignored.


